Terminals unused in grammar

    ARROW
    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID LBRACE HelpProgam RBRACE
    2        | CLASS ID LBRACE error

    3 HelpProgam: MethodDecl HelpProgam
    4           | FieldDecl HelpProgam
    5           | SEMICOLON HelpProgam
    6           | ε

    7 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

    8 MethodHeader: Type ID LPAR FormalParams RPAR
    9             | Type ID LPAR RPAR
   10             | VOID ID LPAR FormalParams RPAR
   11             | VOID ID LPAR RPAR

   12 MethodBody: LBRACE HelpMethod RBRACE

   13 HelpMethod: Statement HelpMethod
   14           | VarDecl HelpMethod
   15           | ε

   16 FieldDecl: PUBLIC STATIC Type ID HelpField SEMICOLON
   17          | error SEMICOLON

   18 HelpField: COMMA ID HelpField
   19          | ε

   20 Type: INT
   21     | DOUBLE
   22     | BOOL

   23 FormalParams: Type ID FormalParamsAux
   24             | STRING LSQ RSQ ID

   25 FormalParamsAux: COMMA Type ID FormalParamsAux
   26                | ε

   27 VarDecl: Type ID VarDeclAux SEMICOLON

   28 VarDeclAux: COMMA ID VarDeclAux
   29           | ε

   30 Statement: LBRACE StatementAux RBRACE
   31          | IF LPAR Expr RPAR Statement
   32          | IF LPAR Expr RPAR Statement ELSE Statement
   33          | WHILE LPAR Expr RPAR Statement
   34          | RETURN SEMICOLON
   35          | RETURN Expr SEMICOLON
   36          | PRINT LPAR Expr RPAR SEMICOLON
   37          | PRINT LPAR STRLIT RPAR SEMICOLON
   38          | MethodInvocation SEMICOLON
   39          | Assignment SEMICOLON
   40          | ParseArgs SEMICOLON
   41          | SEMICOLON
   42          | error SEMICOLON

   43 StatementAux: Statement StatementAux
   44             | ε

   45 MethodInvocation: ID LPAR Expr MethodInvocationaux RPAR
   46                 | ID LPAR RPAR
   47                 | ID LPAR error RPAR

   48 MethodInvocationaux: COMMA Expr MethodInvocationaux
   49                    | ε

   50 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR
   51          | PARSEINT LPAR error RPAR

   52 Assignment: ID ASSIGN Expr

   53 Expr: Expr PLUS Expr
   54     | Expr MINUS Expr
   55     | Expr STAR Expr
   56     | Expr DIV Expr
   57     | Expr MOD Expr
   58     | Expr OR Expr
   59     | Expr XOR Expr
   60     | Expr AND Expr
   61     | Expr LSHIFT Expr
   62     | Expr RSHIFT Expr
   63     | Expr EQ Expr
   64     | Expr NE Expr
   65     | Expr LT Expr
   66     | Expr GT Expr
   67     | Expr LE Expr
   68     | Expr GE Expr
   69     | MINUS Expr
   70     | NOT Expr
   71     | PLUS Expr
   72     | LPAR Expr RPAR
   73     | ID
   74     | ID DOTLENGTH
   75     | INTLIT
   76     | REALLIT
   77     | BOOLLIT
   78     | MethodInvocation
   79     | Assignment
   80     | ParseArgs
   81     | LPAR error RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256) 2 17 42 47 51 81
    CLASS (258) 1 2
    PUBLIC (259) 7 16
    STATIC (260) 7 16
    STRING (261) 24
    VOID (262) 10 11
    INT (263) 20
    DOUBLE (264) 21
    BOOL (265) 22
    SEMICOLON (266) 5 16 17 27 34 35 36 37 38 39 40 41 42
    COMMA (267) 18 25 28 48
    LBRACE (268) 1 2 12 30
    RBRACE (269) 1 12 30
    LPAR (270) 8 9 10 11 31 32 33 36 37 45 46 47 50 51 72 81
    RPAR (271) 8 9 10 11 31 32 33 36 37 45 46 47 50 51 72 81
    LSQ (272) 24 50
    RSQ (273) 24 50
    ASSIGN (274) 52
    PLUS (275) 53 71
    MINUS (276) 54 69
    STAR (277) 55
    DIV (278) 56
    MOD (279) 57
    XOR (280) 59
    OR (281) 58
    AND (282) 60
    EQ (283) 63
    NE (284) 64
    LE (285) 67
    GE (286) 68
    LT (287) 65
    GT (288) 66
    NOT (289) 70
    WHILE (290) 33
    IF (291) 31 32
    ELSE (292) 32
    RETURN (293) 34 35
    ARROW (294)
    LSHIFT (295) 61
    RSHIFT (296) 62
    DOTLENGTH (297) 74
    PRINT (298) 36 37
    PARSEINT (299) 50 51
    RESERVED (300)
    REALLIT <string> (301) 76
    STRLIT <string> (302) 37
    INTLIT <string> (303) 75
    ID <string> (304) 1 2 8 9 10 11 16 18 23 24 25 27 28 45 46 47 50 52 73 74
    BOOLLIT <string> (305) 77


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    Program <ast_tree> (52)
        on left: 1 2
        on right: 0
    HelpProgam <ast_tree> (53)
        on left: 3 4 5 6
        on right: 1 3 4 5
    MethodDecl <ast_tree> (54)
        on left: 7
        on right: 3
    MethodHeader <ast_tree> (55)
        on left: 8 9 10 11
        on right: 7
    MethodBody <ast_tree> (56)
        on left: 12
        on right: 7
    HelpMethod <ast_tree> (57)
        on left: 13 14 15
        on right: 12 13 14
    FieldDecl <ast_tree> (58)
        on left: 16 17
        on right: 4
    HelpField <ast_tree> (59)
        on left: 18 19
        on right: 16 18
    Type <ast_tree> (60)
        on left: 20 21 22
        on right: 8 9 16 23 25 27
    FormalParams <ast_tree> (61)
        on left: 23 24
        on right: 8 10
    FormalParamsAux <ast_tree> (62)
        on left: 25 26
        on right: 23 25
    VarDecl <ast_tree> (63)
        on left: 27
        on right: 14
    VarDeclAux <ast_tree> (64)
        on left: 28 29
        on right: 27 28
    Statement <ast_tree> (65)
        on left: 30 31 32 33 34 35 36 37 38 39 40 41 42
        on right: 13 31 32 33 43
    StatementAux <ast_tree> (66)
        on left: 43 44
        on right: 30 43
    MethodInvocation <ast_tree> (67)
        on left: 45 46 47
        on right: 38 78
    MethodInvocationaux <ast_tree> (68)
        on left: 48 49
        on right: 45 48
    ParseArgs <ast_tree> (69)
        on left: 50 51
        on right: 40 80
    Assignment <ast_tree> (70)
        on left: 52
        on right: 39 79
    Expr <ast_tree> (71)
        on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
        on right: 31 32 33 35 36 45 48 50 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72


State 0

    0 $accept: • Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS • ID LBRACE HelpProgam RBRACE
    2        | CLASS • ID LBRACE error

    ID  shift, and go to state 3


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID • LBRACE HelpProgam RBRACE
    2        | CLASS ID • LBRACE error

    LBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end •

    $default  accept


State 5

    1 Program: CLASS ID LBRACE • HelpProgam RBRACE
    2        | CLASS ID LBRACE • error

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 6 (HelpProgam)

    HelpProgam  go to state 9
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 6

    2 Program: CLASS ID LBRACE error •
   17 FieldDecl: error • SEMICOLON

    SEMICOLON  shift, and go to state 12

    $default  reduce using rule 2 (Program)


State 7

    7 MethodDecl: PUBLIC • STATIC MethodHeader MethodBody
   16 FieldDecl: PUBLIC • STATIC Type ID HelpField SEMICOLON

    STATIC  shift, and go to state 13


State 8

    5 HelpProgam: SEMICOLON • HelpProgam

    error      shift, and go to state 14
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 6 (HelpProgam)

    HelpProgam  go to state 15
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 9

    1 Program: CLASS ID LBRACE HelpProgam • RBRACE

    RBRACE  shift, and go to state 16


State 10

    3 HelpProgam: MethodDecl • HelpProgam

    error      shift, and go to state 14
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 6 (HelpProgam)

    HelpProgam  go to state 17
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 11

    4 HelpProgam: FieldDecl • HelpProgam

    error      shift, and go to state 14
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 6 (HelpProgam)

    HelpProgam  go to state 18
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 12

   17 FieldDecl: error SEMICOLON •

    $default  reduce using rule 17 (FieldDecl)


State 13

    7 MethodDecl: PUBLIC STATIC • MethodHeader MethodBody
   16 FieldDecl: PUBLIC STATIC • Type ID HelpField SEMICOLON

    VOID    shift, and go to state 19
    INT     shift, and go to state 20
    DOUBLE  shift, and go to state 21
    BOOL    shift, and go to state 22

    MethodHeader  go to state 23
    Type          go to state 24


State 14

   17 FieldDecl: error • SEMICOLON

    SEMICOLON  shift, and go to state 12


State 15

    5 HelpProgam: SEMICOLON HelpProgam •

    $default  reduce using rule 5 (HelpProgam)


State 16

    1 Program: CLASS ID LBRACE HelpProgam RBRACE •

    $default  reduce using rule 1 (Program)


State 17

    3 HelpProgam: MethodDecl HelpProgam •

    $default  reduce using rule 3 (HelpProgam)


State 18

    4 HelpProgam: FieldDecl HelpProgam •

    $default  reduce using rule 4 (HelpProgam)


State 19

   10 MethodHeader: VOID • ID LPAR FormalParams RPAR
   11             | VOID • ID LPAR RPAR

    ID  shift, and go to state 25


State 20

   20 Type: INT •

    $default  reduce using rule 20 (Type)


State 21

   21 Type: DOUBLE •

    $default  reduce using rule 21 (Type)


State 22

   22 Type: BOOL •

    $default  reduce using rule 22 (Type)


State 23

    7 MethodDecl: PUBLIC STATIC MethodHeader • MethodBody

    LBRACE  shift, and go to state 26

    MethodBody  go to state 27


State 24

    8 MethodHeader: Type • ID LPAR FormalParams RPAR
    9             | Type • ID LPAR RPAR
   16 FieldDecl: PUBLIC STATIC Type • ID HelpField SEMICOLON

    ID  shift, and go to state 28


State 25

   10 MethodHeader: VOID ID • LPAR FormalParams RPAR
   11             | VOID ID • LPAR RPAR

    LPAR  shift, and go to state 29


State 26

   12 MethodBody: LBRACE • HelpMethod RBRACE

    error      shift, and go to state 30
    INT        shift, and go to state 20
    DOUBLE     shift, and go to state 21
    BOOL       shift, and go to state 22
    SEMICOLON  shift, and go to state 31
    LBRACE     shift, and go to state 32
    WHILE      shift, and go to state 33
    IF         shift, and go to state 34
    RETURN     shift, and go to state 35
    PRINT      shift, and go to state 36
    PARSEINT   shift, and go to state 37
    ID         shift, and go to state 38

    RBRACE  reduce using rule 15 (HelpMethod)

    HelpMethod        go to state 39
    Type              go to state 40
    VarDecl           go to state 41
    Statement         go to state 42
    MethodInvocation  go to state 43
    ParseArgs         go to state 44
    Assignment        go to state 45


State 27

    7 MethodDecl: PUBLIC STATIC MethodHeader MethodBody •

    $default  reduce using rule 7 (MethodDecl)


State 28

    8 MethodHeader: Type ID • LPAR FormalParams RPAR
    9             | Type ID • LPAR RPAR
   16 FieldDecl: PUBLIC STATIC Type ID • HelpField SEMICOLON

    COMMA  shift, and go to state 46
    LPAR   shift, and go to state 47

    $default  reduce using rule 19 (HelpField)

    HelpField  go to state 48


State 29

   10 MethodHeader: VOID ID LPAR • FormalParams RPAR
   11             | VOID ID LPAR • RPAR

    STRING  shift, and go to state 49
    INT     shift, and go to state 20
    DOUBLE  shift, and go to state 21
    BOOL    shift, and go to state 22
    RPAR    shift, and go to state 50

    Type          go to state 51
    FormalParams  go to state 52


State 30

   42 Statement: error • SEMICOLON

    SEMICOLON  shift, and go to state 53


State 31

   41 Statement: SEMICOLON •

    $default  reduce using rule 41 (Statement)


State 32

   30 Statement: LBRACE • StatementAux RBRACE

    error      shift, and go to state 30
    SEMICOLON  shift, and go to state 31
    LBRACE     shift, and go to state 32
    WHILE      shift, and go to state 33
    IF         shift, and go to state 34
    RETURN     shift, and go to state 35
    PRINT      shift, and go to state 36
    PARSEINT   shift, and go to state 37
    ID         shift, and go to state 38

    RBRACE  reduce using rule 44 (StatementAux)

    Statement         go to state 54
    StatementAux      go to state 55
    MethodInvocation  go to state 43
    ParseArgs         go to state 44
    Assignment        go to state 45


State 33

   33 Statement: WHILE • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 56


State 34

   31 Statement: IF • LPAR Expr RPAR Statement
   32          | IF • LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 57


State 35

   34 Statement: RETURN • SEMICOLON
   35          | RETURN • Expr SEMICOLON

    SEMICOLON  shift, and go to state 58
    LPAR       shift, and go to state 59
    PLUS       shift, and go to state 60
    MINUS      shift, and go to state 61
    NOT        shift, and go to state 62
    PARSEINT   shift, and go to state 37
    REALLIT    shift, and go to state 63
    INTLIT     shift, and go to state 64
    ID         shift, and go to state 65
    BOOLLIT    shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 70


State 36

   36 Statement: PRINT • LPAR Expr RPAR SEMICOLON
   37          | PRINT • LPAR STRLIT RPAR SEMICOLON

    LPAR  shift, and go to state 71


State 37

   50 ParseArgs: PARSEINT • LPAR ID LSQ Expr RSQ RPAR
   51          | PARSEINT • LPAR error RPAR

    LPAR  shift, and go to state 72


State 38

   45 MethodInvocation: ID • LPAR Expr MethodInvocationaux RPAR
   46                 | ID • LPAR RPAR
   47                 | ID • LPAR error RPAR
   52 Assignment: ID • ASSIGN Expr

    LPAR    shift, and go to state 73
    ASSIGN  shift, and go to state 74


State 39

   12 MethodBody: LBRACE HelpMethod • RBRACE

    RBRACE  shift, and go to state 75


State 40

   27 VarDecl: Type • ID VarDeclAux SEMICOLON

    ID  shift, and go to state 76


State 41

   14 HelpMethod: VarDecl • HelpMethod

    error      shift, and go to state 30
    INT        shift, and go to state 20
    DOUBLE     shift, and go to state 21
    BOOL       shift, and go to state 22
    SEMICOLON  shift, and go to state 31
    LBRACE     shift, and go to state 32
    WHILE      shift, and go to state 33
    IF         shift, and go to state 34
    RETURN     shift, and go to state 35
    PRINT      shift, and go to state 36
    PARSEINT   shift, and go to state 37
    ID         shift, and go to state 38

    RBRACE  reduce using rule 15 (HelpMethod)

    HelpMethod        go to state 77
    Type              go to state 40
    VarDecl           go to state 41
    Statement         go to state 42
    MethodInvocation  go to state 43
    ParseArgs         go to state 44
    Assignment        go to state 45


State 42

   13 HelpMethod: Statement • HelpMethod

    error      shift, and go to state 30
    INT        shift, and go to state 20
    DOUBLE     shift, and go to state 21
    BOOL       shift, and go to state 22
    SEMICOLON  shift, and go to state 31
    LBRACE     shift, and go to state 32
    WHILE      shift, and go to state 33
    IF         shift, and go to state 34
    RETURN     shift, and go to state 35
    PRINT      shift, and go to state 36
    PARSEINT   shift, and go to state 37
    ID         shift, and go to state 38

    RBRACE  reduce using rule 15 (HelpMethod)

    HelpMethod        go to state 78
    Type              go to state 40
    VarDecl           go to state 41
    Statement         go to state 42
    MethodInvocation  go to state 43
    ParseArgs         go to state 44
    Assignment        go to state 45


State 43

   38 Statement: MethodInvocation • SEMICOLON

    SEMICOLON  shift, and go to state 79


State 44

   40 Statement: ParseArgs • SEMICOLON

    SEMICOLON  shift, and go to state 80


State 45

   39 Statement: Assignment • SEMICOLON

    SEMICOLON  shift, and go to state 81


State 46

   18 HelpField: COMMA • ID HelpField

    ID  shift, and go to state 82


State 47

    8 MethodHeader: Type ID LPAR • FormalParams RPAR
    9             | Type ID LPAR • RPAR

    STRING  shift, and go to state 49
    INT     shift, and go to state 20
    DOUBLE  shift, and go to state 21
    BOOL    shift, and go to state 22
    RPAR    shift, and go to state 83

    Type          go to state 51
    FormalParams  go to state 84


State 48

   16 FieldDecl: PUBLIC STATIC Type ID HelpField • SEMICOLON

    SEMICOLON  shift, and go to state 85


State 49

   24 FormalParams: STRING • LSQ RSQ ID

    LSQ  shift, and go to state 86


State 50

   11 MethodHeader: VOID ID LPAR RPAR •

    $default  reduce using rule 11 (MethodHeader)


State 51

   23 FormalParams: Type • ID FormalParamsAux

    ID  shift, and go to state 87


State 52

   10 MethodHeader: VOID ID LPAR FormalParams • RPAR

    RPAR  shift, and go to state 88


State 53

   42 Statement: error SEMICOLON •

    $default  reduce using rule 42 (Statement)


State 54

   43 StatementAux: Statement • StatementAux

    error      shift, and go to state 30
    SEMICOLON  shift, and go to state 31
    LBRACE     shift, and go to state 32
    WHILE      shift, and go to state 33
    IF         shift, and go to state 34
    RETURN     shift, and go to state 35
    PRINT      shift, and go to state 36
    PARSEINT   shift, and go to state 37
    ID         shift, and go to state 38

    RBRACE  reduce using rule 44 (StatementAux)

    Statement         go to state 54
    StatementAux      go to state 89
    MethodInvocation  go to state 43
    ParseArgs         go to state 44
    Assignment        go to state 45


State 55

   30 Statement: LBRACE StatementAux • RBRACE

    RBRACE  shift, and go to state 90


State 56

   33 Statement: WHILE LPAR • Expr RPAR Statement

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 91


State 57

   31 Statement: IF LPAR • Expr RPAR Statement
   32          | IF LPAR • Expr RPAR Statement ELSE Statement

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 92


State 58

   34 Statement: RETURN SEMICOLON •

    $default  reduce using rule 34 (Statement)


State 59

   72 Expr: LPAR • Expr RPAR
   81     | LPAR • error RPAR

    error     shift, and go to state 93
    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 94


State 60

   71 Expr: PLUS • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 95


State 61

   69 Expr: MINUS • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 96


State 62

   70 Expr: NOT • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 97


State 63

   76 Expr: REALLIT •

    $default  reduce using rule 76 (Expr)


State 64

   75 Expr: INTLIT •

    $default  reduce using rule 75 (Expr)


State 65

   45 MethodInvocation: ID • LPAR Expr MethodInvocationaux RPAR
   46                 | ID • LPAR RPAR
   47                 | ID • LPAR error RPAR
   52 Assignment: ID • ASSIGN Expr
   73 Expr: ID •
   74     | ID • DOTLENGTH

    LPAR       shift, and go to state 73
    ASSIGN     shift, and go to state 74
    DOTLENGTH  shift, and go to state 98

    $default  reduce using rule 73 (Expr)


State 66

   77 Expr: BOOLLIT •

    $default  reduce using rule 77 (Expr)


State 67

   78 Expr: MethodInvocation •

    $default  reduce using rule 78 (Expr)


State 68

   80 Expr: ParseArgs •

    $default  reduce using rule 80 (Expr)


State 69

   79 Expr: Assignment •

    $default  reduce using rule 79 (Expr)


State 70

   35 Statement: RETURN Expr • SEMICOLON
   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    SEMICOLON  shift, and go to state 99
    PLUS       shift, and go to state 100
    MINUS      shift, and go to state 101
    STAR       shift, and go to state 102
    DIV        shift, and go to state 103
    MOD        shift, and go to state 104
    XOR        shift, and go to state 105
    OR         shift, and go to state 106
    AND        shift, and go to state 107
    EQ         shift, and go to state 108
    NE         shift, and go to state 109
    LE         shift, and go to state 110
    GE         shift, and go to state 111
    LT         shift, and go to state 112
    GT         shift, and go to state 113
    LSHIFT     shift, and go to state 114
    RSHIFT     shift, and go to state 115


State 71

   36 Statement: PRINT LPAR • Expr RPAR SEMICOLON
   37          | PRINT LPAR • STRLIT RPAR SEMICOLON

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    STRLIT    shift, and go to state 116
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 117


State 72

   50 ParseArgs: PARSEINT LPAR • ID LSQ Expr RSQ RPAR
   51          | PARSEINT LPAR • error RPAR

    error  shift, and go to state 118
    ID     shift, and go to state 119


State 73

   45 MethodInvocation: ID LPAR • Expr MethodInvocationaux RPAR
   46                 | ID LPAR • RPAR
   47                 | ID LPAR • error RPAR

    error     shift, and go to state 120
    LPAR      shift, and go to state 59
    RPAR      shift, and go to state 121
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 122


State 74

   52 Assignment: ID ASSIGN • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 123


State 75

   12 MethodBody: LBRACE HelpMethod RBRACE •

    $default  reduce using rule 12 (MethodBody)


State 76

   27 VarDecl: Type ID • VarDeclAux SEMICOLON

    COMMA  shift, and go to state 124

    $default  reduce using rule 29 (VarDeclAux)

    VarDeclAux  go to state 125


State 77

   14 HelpMethod: VarDecl HelpMethod •

    $default  reduce using rule 14 (HelpMethod)


State 78

   13 HelpMethod: Statement HelpMethod •

    $default  reduce using rule 13 (HelpMethod)


State 79

   38 Statement: MethodInvocation SEMICOLON •

    $default  reduce using rule 38 (Statement)


State 80

   40 Statement: ParseArgs SEMICOLON •

    $default  reduce using rule 40 (Statement)


State 81

   39 Statement: Assignment SEMICOLON •

    $default  reduce using rule 39 (Statement)


State 82

   18 HelpField: COMMA ID • HelpField

    COMMA  shift, and go to state 46

    $default  reduce using rule 19 (HelpField)

    HelpField  go to state 126


State 83

    9 MethodHeader: Type ID LPAR RPAR •

    $default  reduce using rule 9 (MethodHeader)


State 84

    8 MethodHeader: Type ID LPAR FormalParams • RPAR

    RPAR  shift, and go to state 127


State 85

   16 FieldDecl: PUBLIC STATIC Type ID HelpField SEMICOLON •

    $default  reduce using rule 16 (FieldDecl)


State 86

   24 FormalParams: STRING LSQ • RSQ ID

    RSQ  shift, and go to state 128


State 87

   23 FormalParams: Type ID • FormalParamsAux

    COMMA  shift, and go to state 129

    $default  reduce using rule 26 (FormalParamsAux)

    FormalParamsAux  go to state 130


State 88

   10 MethodHeader: VOID ID LPAR FormalParams RPAR •

    $default  reduce using rule 10 (MethodHeader)


State 89

   43 StatementAux: Statement StatementAux •

    $default  reduce using rule 43 (StatementAux)


State 90

   30 Statement: LBRACE StatementAux RBRACE •

    $default  reduce using rule 30 (Statement)


State 91

   33 Statement: WHILE LPAR Expr • RPAR Statement
   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    RPAR    shift, and go to state 131
    PLUS    shift, and go to state 100
    MINUS   shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MOD     shift, and go to state 104
    XOR     shift, and go to state 105
    OR      shift, and go to state 106
    AND     shift, and go to state 107
    EQ      shift, and go to state 108
    NE      shift, and go to state 109
    LE      shift, and go to state 110
    GE      shift, and go to state 111
    LT      shift, and go to state 112
    GT      shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115


State 92

   31 Statement: IF LPAR Expr • RPAR Statement
   32          | IF LPAR Expr • RPAR Statement ELSE Statement
   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    RPAR    shift, and go to state 132
    PLUS    shift, and go to state 100
    MINUS   shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MOD     shift, and go to state 104
    XOR     shift, and go to state 105
    OR      shift, and go to state 106
    AND     shift, and go to state 107
    EQ      shift, and go to state 108
    NE      shift, and go to state 109
    LE      shift, and go to state 110
    GE      shift, and go to state 111
    LT      shift, and go to state 112
    GT      shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115


State 93

   81 Expr: LPAR error • RPAR

    RPAR  shift, and go to state 133


State 94

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   72     | LPAR Expr • RPAR

    RPAR    shift, and go to state 134
    PLUS    shift, and go to state 100
    MINUS   shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MOD     shift, and go to state 104
    XOR     shift, and go to state 105
    OR      shift, and go to state 106
    AND     shift, and go to state 107
    EQ      shift, and go to state 108
    NE      shift, and go to state 109
    LE      shift, and go to state 110
    GE      shift, and go to state 111
    LT      shift, and go to state 112
    GT      shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115


State 95

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   71     | PLUS Expr •

    $default  reduce using rule 71 (Expr)


State 96

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   69     | MINUS Expr •

    $default  reduce using rule 69 (Expr)


State 97

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   70     | NOT Expr •

    $default  reduce using rule 70 (Expr)


State 98

   74 Expr: ID DOTLENGTH •

    $default  reduce using rule 74 (Expr)


State 99

   35 Statement: RETURN Expr SEMICOLON •

    $default  reduce using rule 35 (Statement)


State 100

   53 Expr: Expr PLUS • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 135


State 101

   54 Expr: Expr MINUS • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 136


State 102

   55 Expr: Expr STAR • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 137


State 103

   56 Expr: Expr DIV • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 138


State 104

   57 Expr: Expr MOD • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 139


State 105

   59 Expr: Expr XOR • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 140


State 106

   58 Expr: Expr OR • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 141


State 107

   60 Expr: Expr AND • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 142


State 108

   63 Expr: Expr EQ • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 143


State 109

   64 Expr: Expr NE • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 144


State 110

   67 Expr: Expr LE • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 145


State 111

   68 Expr: Expr GE • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 146


State 112

   65 Expr: Expr LT • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 147


State 113

   66 Expr: Expr GT • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 148


State 114

   61 Expr: Expr LSHIFT • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 149


State 115

   62 Expr: Expr RSHIFT • Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 150


State 116

   37 Statement: PRINT LPAR STRLIT • RPAR SEMICOLON

    RPAR  shift, and go to state 151


State 117

   36 Statement: PRINT LPAR Expr • RPAR SEMICOLON
   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    RPAR    shift, and go to state 152
    PLUS    shift, and go to state 100
    MINUS   shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MOD     shift, and go to state 104
    XOR     shift, and go to state 105
    OR      shift, and go to state 106
    AND     shift, and go to state 107
    EQ      shift, and go to state 108
    NE      shift, and go to state 109
    LE      shift, and go to state 110
    GE      shift, and go to state 111
    LT      shift, and go to state 112
    GT      shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115


State 118

   51 ParseArgs: PARSEINT LPAR error • RPAR

    RPAR  shift, and go to state 153


State 119

   50 ParseArgs: PARSEINT LPAR ID • LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 154


State 120

   47 MethodInvocation: ID LPAR error • RPAR

    RPAR  shift, and go to state 155


State 121

   46 MethodInvocation: ID LPAR RPAR •

    $default  reduce using rule 46 (MethodInvocation)


State 122

   45 MethodInvocation: ID LPAR Expr • MethodInvocationaux RPAR
   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    COMMA   shift, and go to state 156
    PLUS    shift, and go to state 100
    MINUS   shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MOD     shift, and go to state 104
    XOR     shift, and go to state 105
    OR      shift, and go to state 106
    AND     shift, and go to state 107
    EQ      shift, and go to state 108
    NE      shift, and go to state 109
    LE      shift, and go to state 110
    GE      shift, and go to state 111
    LT      shift, and go to state 112
    GT      shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115

    $default  reduce using rule 49 (MethodInvocationaux)

    MethodInvocationaux  go to state 157


State 123

   52 Assignment: ID ASSIGN Expr •
   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    PLUS    shift, and go to state 100
    MINUS   shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MOD     shift, and go to state 104
    XOR     shift, and go to state 105
    OR      shift, and go to state 106
    AND     shift, and go to state 107
    EQ      shift, and go to state 108
    NE      shift, and go to state 109
    LE      shift, and go to state 110
    GE      shift, and go to state 111
    LT      shift, and go to state 112
    GT      shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115

    $default  reduce using rule 52 (Assignment)


State 124

   28 VarDeclAux: COMMA • ID VarDeclAux

    ID  shift, and go to state 158


State 125

   27 VarDecl: Type ID VarDeclAux • SEMICOLON

    SEMICOLON  shift, and go to state 159


State 126

   18 HelpField: COMMA ID HelpField •

    $default  reduce using rule 18 (HelpField)


State 127

    8 MethodHeader: Type ID LPAR FormalParams RPAR •

    $default  reduce using rule 8 (MethodHeader)


State 128

   24 FormalParams: STRING LSQ RSQ • ID

    ID  shift, and go to state 160


State 129

   25 FormalParamsAux: COMMA • Type ID FormalParamsAux

    INT     shift, and go to state 20
    DOUBLE  shift, and go to state 21
    BOOL    shift, and go to state 22

    Type  go to state 161


State 130

   23 FormalParams: Type ID FormalParamsAux •

    $default  reduce using rule 23 (FormalParams)


State 131

   33 Statement: WHILE LPAR Expr RPAR • Statement

    error      shift, and go to state 30
    SEMICOLON  shift, and go to state 31
    LBRACE     shift, and go to state 32
    WHILE      shift, and go to state 33
    IF         shift, and go to state 34
    RETURN     shift, and go to state 35
    PRINT      shift, and go to state 36
    PARSEINT   shift, and go to state 37
    ID         shift, and go to state 38

    Statement         go to state 162
    MethodInvocation  go to state 43
    ParseArgs         go to state 44
    Assignment        go to state 45


State 132

   31 Statement: IF LPAR Expr RPAR • Statement
   32          | IF LPAR Expr RPAR • Statement ELSE Statement

    error      shift, and go to state 30
    SEMICOLON  shift, and go to state 31
    LBRACE     shift, and go to state 32
    WHILE      shift, and go to state 33
    IF         shift, and go to state 34
    RETURN     shift, and go to state 35
    PRINT      shift, and go to state 36
    PARSEINT   shift, and go to state 37
    ID         shift, and go to state 38

    Statement         go to state 163
    MethodInvocation  go to state 43
    ParseArgs         go to state 44
    Assignment        go to state 45


State 133

   81 Expr: LPAR error RPAR •

    $default  reduce using rule 81 (Expr)


State 134

   72 Expr: LPAR Expr RPAR •

    $default  reduce using rule 72 (Expr)


State 135

   53 Expr: Expr • PLUS Expr
   53     | Expr PLUS Expr •
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    STAR  shift, and go to state 102
    DIV   shift, and go to state 103
    MOD   shift, and go to state 104

    $default  reduce using rule 53 (Expr)


State 136

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   54     | Expr MINUS Expr •
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    STAR  shift, and go to state 102
    DIV   shift, and go to state 103
    MOD   shift, and go to state 104

    $default  reduce using rule 54 (Expr)


State 137

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   55     | Expr STAR Expr •
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    $default  reduce using rule 55 (Expr)


State 138

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   56     | Expr DIV Expr •
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    $default  reduce using rule 56 (Expr)


State 139

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   57     | Expr MOD Expr •
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    $default  reduce using rule 57 (Expr)


State 140

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   59     | Expr XOR Expr •
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    PLUS    shift, and go to state 100
    MINUS   shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MOD     shift, and go to state 104
    EQ      shift, and go to state 108
    NE      shift, and go to state 109
    LE      shift, and go to state 110
    GE      shift, and go to state 111
    LT      shift, and go to state 112
    GT      shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115

    $default  reduce using rule 59 (Expr)


State 141

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   58     | Expr OR Expr •
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    PLUS    shift, and go to state 100
    MINUS   shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MOD     shift, and go to state 104
    XOR     shift, and go to state 105
    AND     shift, and go to state 107
    EQ      shift, and go to state 108
    NE      shift, and go to state 109
    LE      shift, and go to state 110
    GE      shift, and go to state 111
    LT      shift, and go to state 112
    GT      shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115

    $default  reduce using rule 58 (Expr)


State 142

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   60     | Expr AND Expr •
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    PLUS    shift, and go to state 100
    MINUS   shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MOD     shift, and go to state 104
    XOR     shift, and go to state 105
    EQ      shift, and go to state 108
    NE      shift, and go to state 109
    LE      shift, and go to state 110
    GE      shift, and go to state 111
    LT      shift, and go to state 112
    GT      shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115

    $default  reduce using rule 60 (Expr)


State 143

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   63     | Expr EQ Expr •
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104
    LE     shift, and go to state 110
    GE     shift, and go to state 111
    LT     shift, and go to state 112
    GT     shift, and go to state 113

    $default  reduce using rule 63 (Expr)


State 144

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   64     | Expr NE Expr •
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104
    LE     shift, and go to state 110
    GE     shift, and go to state 111
    LT     shift, and go to state 112
    GT     shift, and go to state 113

    $default  reduce using rule 64 (Expr)


State 145

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   67     | Expr LE Expr •
   68     | Expr • GE Expr

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104

    $default  reduce using rule 67 (Expr)


State 146

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr
   68     | Expr GE Expr •

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104

    $default  reduce using rule 68 (Expr)


State 147

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   65     | Expr LT Expr •
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104

    $default  reduce using rule 65 (Expr)


State 148

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   66     | Expr GT Expr •
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104

    $default  reduce using rule 66 (Expr)


State 149

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   61     | Expr LSHIFT Expr •
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104
    EQ     shift, and go to state 108
    NE     shift, and go to state 109
    LE     shift, and go to state 110
    GE     shift, and go to state 111
    LT     shift, and go to state 112
    GT     shift, and go to state 113

    $default  reduce using rule 61 (Expr)


State 150

   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   62     | Expr RSHIFT Expr •
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104
    EQ     shift, and go to state 108
    NE     shift, and go to state 109
    LE     shift, and go to state 110
    GE     shift, and go to state 111
    LT     shift, and go to state 112
    GT     shift, and go to state 113

    $default  reduce using rule 62 (Expr)


State 151

   37 Statement: PRINT LPAR STRLIT RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 164


State 152

   36 Statement: PRINT LPAR Expr RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 165


State 153

   51 ParseArgs: PARSEINT LPAR error RPAR •

    $default  reduce using rule 51 (ParseArgs)


State 154

   50 ParseArgs: PARSEINT LPAR ID LSQ • Expr RSQ RPAR

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 166


State 155

   47 MethodInvocation: ID LPAR error RPAR •

    $default  reduce using rule 47 (MethodInvocation)


State 156

   48 MethodInvocationaux: COMMA • Expr MethodInvocationaux

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 63
    INTLIT    shift, and go to state 64
    ID        shift, and go to state 65
    BOOLLIT   shift, and go to state 66

    MethodInvocation  go to state 67
    ParseArgs         go to state 68
    Assignment        go to state 69
    Expr              go to state 167


State 157

   45 MethodInvocation: ID LPAR Expr MethodInvocationaux • RPAR

    RPAR  shift, and go to state 168


State 158

   28 VarDeclAux: COMMA ID • VarDeclAux

    COMMA  shift, and go to state 124

    $default  reduce using rule 29 (VarDeclAux)

    VarDeclAux  go to state 169


State 159

   27 VarDecl: Type ID VarDeclAux SEMICOLON •

    $default  reduce using rule 27 (VarDecl)


State 160

   24 FormalParams: STRING LSQ RSQ ID •

    $default  reduce using rule 24 (FormalParams)


State 161

   25 FormalParamsAux: COMMA Type • ID FormalParamsAux

    ID  shift, and go to state 170


State 162

   33 Statement: WHILE LPAR Expr RPAR Statement •

    $default  reduce using rule 33 (Statement)


State 163

   31 Statement: IF LPAR Expr RPAR Statement •
   32          | IF LPAR Expr RPAR Statement • ELSE Statement

    ELSE  shift, and go to state 171

    $default  reduce using rule 31 (Statement)


State 164

   37 Statement: PRINT LPAR STRLIT RPAR SEMICOLON •

    $default  reduce using rule 37 (Statement)


State 165

   36 Statement: PRINT LPAR Expr RPAR SEMICOLON •

    $default  reduce using rule 36 (Statement)


State 166

   50 ParseArgs: PARSEINT LPAR ID LSQ Expr • RSQ RPAR
   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    RSQ     shift, and go to state 172
    PLUS    shift, and go to state 100
    MINUS   shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MOD     shift, and go to state 104
    XOR     shift, and go to state 105
    OR      shift, and go to state 106
    AND     shift, and go to state 107
    EQ      shift, and go to state 108
    NE      shift, and go to state 109
    LE      shift, and go to state 110
    GE      shift, and go to state 111
    LT      shift, and go to state 112
    GT      shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115


State 167

   48 MethodInvocationaux: COMMA Expr • MethodInvocationaux
   53 Expr: Expr • PLUS Expr
   54     | Expr • MINUS Expr
   55     | Expr • STAR Expr
   56     | Expr • DIV Expr
   57     | Expr • MOD Expr
   58     | Expr • OR Expr
   59     | Expr • XOR Expr
   60     | Expr • AND Expr
   61     | Expr • LSHIFT Expr
   62     | Expr • RSHIFT Expr
   63     | Expr • EQ Expr
   64     | Expr • NE Expr
   65     | Expr • LT Expr
   66     | Expr • GT Expr
   67     | Expr • LE Expr
   68     | Expr • GE Expr

    COMMA   shift, and go to state 156
    PLUS    shift, and go to state 100
    MINUS   shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MOD     shift, and go to state 104
    XOR     shift, and go to state 105
    OR      shift, and go to state 106
    AND     shift, and go to state 107
    EQ      shift, and go to state 108
    NE      shift, and go to state 109
    LE      shift, and go to state 110
    GE      shift, and go to state 111
    LT      shift, and go to state 112
    GT      shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115

    $default  reduce using rule 49 (MethodInvocationaux)

    MethodInvocationaux  go to state 173


State 168

   45 MethodInvocation: ID LPAR Expr MethodInvocationaux RPAR •

    $default  reduce using rule 45 (MethodInvocation)


State 169

   28 VarDeclAux: COMMA ID VarDeclAux •

    $default  reduce using rule 28 (VarDeclAux)


State 170

   25 FormalParamsAux: COMMA Type ID • FormalParamsAux

    COMMA  shift, and go to state 129

    $default  reduce using rule 26 (FormalParamsAux)

    FormalParamsAux  go to state 174


State 171

   32 Statement: IF LPAR Expr RPAR Statement ELSE • Statement

    error      shift, and go to state 30
    SEMICOLON  shift, and go to state 31
    LBRACE     shift, and go to state 32
    WHILE      shift, and go to state 33
    IF         shift, and go to state 34
    RETURN     shift, and go to state 35
    PRINT      shift, and go to state 36
    PARSEINT   shift, and go to state 37
    ID         shift, and go to state 38

    Statement         go to state 175
    MethodInvocation  go to state 43
    ParseArgs         go to state 44
    Assignment        go to state 45


State 172

   50 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ • RPAR

    RPAR  shift, and go to state 176


State 173

   48 MethodInvocationaux: COMMA Expr MethodInvocationaux •

    $default  reduce using rule 48 (MethodInvocationaux)


State 174

   25 FormalParamsAux: COMMA Type ID FormalParamsAux •

    $default  reduce using rule 25 (FormalParamsAux)


State 175

   32 Statement: IF LPAR Expr RPAR Statement ELSE Statement •

    $default  reduce using rule 32 (Statement)


State 176

   50 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR •

    $default  reduce using rule 50 (ParseArgs)
