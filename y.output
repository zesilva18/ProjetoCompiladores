Terminals unused in grammar

    ARROW
    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID LBRACE HelpProgam RBRACE

    2 HelpProgam: ε
    3           | FieldDecl HelpProgam
    4           | SEMICOLON HelpProgam
    5           | MethodDecl HelpProgam

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

    7 MethodHeader: Type ID LPAR FormalParams RPAR
    8             | VOID ID LPAR FormalParams RPAR

    9 MethodBody: LBRACE HelpMethod RBRACE

   10 HelpMethod: Statement HelpMethod
   11           | VarDecl HelpMethod
   12           | ε

   13 FieldDecl: PUBLIC STATIC Type ID HelpField SEMICOLON
   14          | error SEMICOLON

   15 HelpField: COMMA ID HelpField
   16          | ε

   17 Type: INT
   18     | DOUBLE
   19     | BOOL

   20 FormalParams: Type ID FormalParamsAux
   21             | STRING LSQ RSQ ID
   22             | ε

   23 FormalParamsAux: COMMA Type ID FormalParamsAux
   24                | ε

   25 VarDecl: Type ID VarDeclAux SEMICOLON

   26 VarDeclAux: COMMA ID VarDeclAux
   27           | ε

   28 Statement: LBRACE Statement StatementAux RBRACE
   29          | IF LPAR Expr RPAR Statement
   30          | IF LPAR Expr RPAR Statement ELSE Statement
   31          | WHILE LPAR Expr RPAR Statement
   32          | RETURN Expr SEMICOLON
   33          | RETURN SEMICOLON
   34          | MethodInvocation SEMICOLON
   35          | Assignment SEMICOLON
   36          | ParseArgs SEMICOLON
   37          | SEMICOLON
   38          | PRINT LPAR Expr RPAR SEMICOLON
   39          | PRINT LPAR STRLIT RPAR SEMICOLON
   40          | error SEMICOLON

   41 StatementAux: Statement StatementAux
   42             | ε

   43 MethodInvocation: ID LPAR RPAR
   44                 | ID LPAR MethodInvocationaux RPAR
   45                 | ID LPAR error RPAR

   46 MethodInvocationaux: Expr MethodInvocationaux_new

   47 MethodInvocationaux_new: COMMA Expr MethodInvocationaux_new
   48                        | ε

   49 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR
   50          | PARSEINT LPAR error RPAR

   51 Assignment: ID ASSIGN Expr

   52 Expr: Expr_aux
   53     | Assignment

   54 Expr_aux: Expr_aux PLUS Expr_aux
   55         | Expr_aux MINUS Expr_aux
   56         | Expr_aux STAR Expr_aux
   57         | Expr_aux DIV Expr_aux
   58         | Expr_aux MOD Expr_aux
   59         | Expr_aux OR Expr_aux
   60         | Expr_aux XOR Expr_aux
   61         | Expr_aux AND Expr_aux
   62         | Expr_aux LSHIFT Expr_aux
   63         | Expr_aux RSHIFT Expr_aux
   64         | Expr_aux EQ Expr_aux
   65         | Expr_aux NE Expr_aux
   66         | Expr_aux LT Expr_aux
   67         | Expr_aux GT Expr_aux
   68         | Expr_aux LE Expr_aux
   69         | Expr_aux GE Expr_aux
   70         | MINUS Expr_aux
   71         | NOT Expr_aux
   72         | PLUS Expr_aux
   73         | LPAR Expr_aux RPAR
   74         | ID
   75         | ID DOTLENGTH
   76         | INTLIT
   77         | REALLIT
   78         | BOOLLIT
   79         | MethodInvocation
   80         | ParseArgs
   81         | LPAR error RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256) 14 40 45 50 81
    CLASS (258) 1
    PUBLIC (259) 6 13
    STATIC (260) 6 13
    STRING (261) 21
    VOID (262) 8
    INT (263) 17
    DOUBLE (264) 18
    BOOL (265) 19
    SEMICOLON (266) 4 13 14 25 32 33 34 35 36 37 38 39 40
    COMMA (267) 15 23 26 47
    LBRACE (268) 1 9 28
    RBRACE (269) 1 9 28
    LPAR (270) 7 8 29 30 31 38 39 43 44 45 49 50 73 81
    RPAR (271) 7 8 29 30 31 38 39 43 44 45 49 50 73 81
    LSQ (272) 21 49
    RSQ (273) 21 49
    ASSIGN (274) 51
    PLUS (275) 54 72
    MINUS (276) 55 70
    STAR (277) 56
    DIV (278) 57
    MOD (279) 58
    XOR (280) 60
    OR (281) 59
    AND (282) 61
    EQ (283) 64
    NE (284) 65
    LE (285) 68
    GE (286) 69
    LT (287) 66
    GT (288) 67
    NOT (289) 71
    WHILE (290) 31
    IF (291) 29 30
    ELSE (292) 30
    RETURN (293) 32 33
    ARROW (294)
    LSHIFT (295) 62
    RSHIFT (296) 63
    DOTLENGTH (297) 75
    PRINT (298) 38 39
    PARSEINT (299) 49 50
    RESERVED (300)
    REALLIT <string> (301) 77
    STRLIT <string> (302) 39
    INTLIT <string> (303) 76
    ID <string> (304) 1 7 8 13 15 20 21 23 25 26 43 44 45 49 51 74 75
    BOOLLIT <string> (305) 78


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    Program <ast_tree> (52)
        on left: 1
        on right: 0
    HelpProgam <ast_tree> (53)
        on left: 2 3 4 5
        on right: 1 3 4 5
    MethodDecl <ast_tree> (54)
        on left: 6
        on right: 5
    MethodHeader <ast_tree> (55)
        on left: 7 8
        on right: 6
    MethodBody <ast_tree> (56)
        on left: 9
        on right: 6
    HelpMethod <ast_tree> (57)
        on left: 10 11 12
        on right: 9 10 11
    FieldDecl <ast_tree> (58)
        on left: 13 14
        on right: 3
    HelpField <ast_tree> (59)
        on left: 15 16
        on right: 13 15
    Type <ast_tree> (60)
        on left: 17 18 19
        on right: 7 13 20 23 25
    FormalParams <ast_tree> (61)
        on left: 20 21 22
        on right: 7 8
    FormalParamsAux <ast_tree> (62)
        on left: 23 24
        on right: 20 23
    VarDecl <ast_tree> (63)
        on left: 25
        on right: 11
    VarDeclAux <ast_tree> (64)
        on left: 26 27
        on right: 25 26
    Statement <ast_tree> (65)
        on left: 28 29 30 31 32 33 34 35 36 37 38 39 40
        on right: 10 28 29 30 31 41
    StatementAux <ast_tree> (66)
        on left: 41 42
        on right: 28 41
    MethodInvocation <ast_tree> (67)
        on left: 43 44 45
        on right: 34 79
    MethodInvocationaux <ast_tree> (68)
        on left: 46
        on right: 44
    MethodInvocationaux_new <ast_tree> (69)
        on left: 47 48
        on right: 46 47
    ParseArgs <ast_tree> (70)
        on left: 49 50
        on right: 36 80
    Assignment <ast_tree> (71)
        on left: 51
        on right: 35 53
    Expr <ast_tree> (72)
        on left: 52 53
        on right: 29 30 31 32 38 46 47 49 51
    Expr_aux <ast_tree> (73)
        on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
        on right: 52 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73


State 0

    0 $accept: • Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS • ID LBRACE HelpProgam RBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID • LBRACE HelpProgam RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end •

    $default  accept


State 5

    1 Program: CLASS ID LBRACE • HelpProgam RBRACE

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 2 (HelpProgam)

    HelpProgam  go to state 9
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 6

   14 FieldDecl: error • SEMICOLON

    SEMICOLON  shift, and go to state 12


State 7

    6 MethodDecl: PUBLIC • STATIC MethodHeader MethodBody
   13 FieldDecl: PUBLIC • STATIC Type ID HelpField SEMICOLON

    STATIC  shift, and go to state 13


State 8

    4 HelpProgam: SEMICOLON • HelpProgam

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 2 (HelpProgam)

    HelpProgam  go to state 14
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 9

    1 Program: CLASS ID LBRACE HelpProgam • RBRACE

    RBRACE  shift, and go to state 15


State 10

    5 HelpProgam: MethodDecl • HelpProgam

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 2 (HelpProgam)

    HelpProgam  go to state 16
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 11

    3 HelpProgam: FieldDecl • HelpProgam

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 2 (HelpProgam)

    HelpProgam  go to state 17
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 12

   14 FieldDecl: error SEMICOLON •

    $default  reduce using rule 14 (FieldDecl)


State 13

    6 MethodDecl: PUBLIC STATIC • MethodHeader MethodBody
   13 FieldDecl: PUBLIC STATIC • Type ID HelpField SEMICOLON

    VOID    shift, and go to state 18
    INT     shift, and go to state 19
    DOUBLE  shift, and go to state 20
    BOOL    shift, and go to state 21

    MethodHeader  go to state 22
    Type          go to state 23


State 14

    4 HelpProgam: SEMICOLON HelpProgam •

    $default  reduce using rule 4 (HelpProgam)


State 15

    1 Program: CLASS ID LBRACE HelpProgam RBRACE •

    $default  reduce using rule 1 (Program)


State 16

    5 HelpProgam: MethodDecl HelpProgam •

    $default  reduce using rule 5 (HelpProgam)


State 17

    3 HelpProgam: FieldDecl HelpProgam •

    $default  reduce using rule 3 (HelpProgam)


State 18

    8 MethodHeader: VOID • ID LPAR FormalParams RPAR

    ID  shift, and go to state 24


State 19

   17 Type: INT •

    $default  reduce using rule 17 (Type)


State 20

   18 Type: DOUBLE •

    $default  reduce using rule 18 (Type)


State 21

   19 Type: BOOL •

    $default  reduce using rule 19 (Type)


State 22

    6 MethodDecl: PUBLIC STATIC MethodHeader • MethodBody

    LBRACE  shift, and go to state 25

    MethodBody  go to state 26


State 23

    7 MethodHeader: Type • ID LPAR FormalParams RPAR
   13 FieldDecl: PUBLIC STATIC Type • ID HelpField SEMICOLON

    ID  shift, and go to state 27


State 24

    8 MethodHeader: VOID ID • LPAR FormalParams RPAR

    LPAR  shift, and go to state 28


State 25

    9 MethodBody: LBRACE • HelpMethod RBRACE

    error      shift, and go to state 29
    INT        shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOL       shift, and go to state 21
    SEMICOLON  shift, and go to state 30
    LBRACE     shift, and go to state 31
    WHILE      shift, and go to state 32
    IF         shift, and go to state 33
    RETURN     shift, and go to state 34
    PRINT      shift, and go to state 35
    PARSEINT   shift, and go to state 36
    ID         shift, and go to state 37

    RBRACE  reduce using rule 12 (HelpMethod)

    HelpMethod        go to state 38
    Type              go to state 39
    VarDecl           go to state 40
    Statement         go to state 41
    MethodInvocation  go to state 42
    ParseArgs         go to state 43
    Assignment        go to state 44


State 26

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody •

    $default  reduce using rule 6 (MethodDecl)


State 27

    7 MethodHeader: Type ID • LPAR FormalParams RPAR
   13 FieldDecl: PUBLIC STATIC Type ID • HelpField SEMICOLON

    COMMA  shift, and go to state 45
    LPAR   shift, and go to state 46

    $default  reduce using rule 16 (HelpField)

    HelpField  go to state 47


State 28

    8 MethodHeader: VOID ID LPAR • FormalParams RPAR

    STRING  shift, and go to state 48
    INT     shift, and go to state 19
    DOUBLE  shift, and go to state 20
    BOOL    shift, and go to state 21

    $default  reduce using rule 22 (FormalParams)

    Type          go to state 49
    FormalParams  go to state 50


State 29

   40 Statement: error • SEMICOLON

    SEMICOLON  shift, and go to state 51


State 30

   37 Statement: SEMICOLON •

    $default  reduce using rule 37 (Statement)


State 31

   28 Statement: LBRACE • Statement StatementAux RBRACE

    error      shift, and go to state 29
    SEMICOLON  shift, and go to state 30
    LBRACE     shift, and go to state 31
    WHILE      shift, and go to state 32
    IF         shift, and go to state 33
    RETURN     shift, and go to state 34
    PRINT      shift, and go to state 35
    PARSEINT   shift, and go to state 36
    ID         shift, and go to state 37

    Statement         go to state 52
    MethodInvocation  go to state 42
    ParseArgs         go to state 43
    Assignment        go to state 44


State 32

   31 Statement: WHILE • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 53


State 33

   29 Statement: IF • LPAR Expr RPAR Statement
   30          | IF • LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 54


State 34

   32 Statement: RETURN • Expr SEMICOLON
   33          | RETURN • SEMICOLON

    SEMICOLON  shift, and go to state 55
    LPAR       shift, and go to state 56
    PLUS       shift, and go to state 57
    MINUS      shift, and go to state 58
    NOT        shift, and go to state 59
    PARSEINT   shift, and go to state 36
    REALLIT    shift, and go to state 60
    INTLIT     shift, and go to state 61
    ID         shift, and go to state 62
    BOOLLIT    shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Assignment        go to state 66
    Expr              go to state 67
    Expr_aux          go to state 68


State 35

   38 Statement: PRINT • LPAR Expr RPAR SEMICOLON
   39          | PRINT • LPAR STRLIT RPAR SEMICOLON

    LPAR  shift, and go to state 69


State 36

   49 ParseArgs: PARSEINT • LPAR ID LSQ Expr RSQ RPAR
   50          | PARSEINT • LPAR error RPAR

    LPAR  shift, and go to state 70


State 37

   43 MethodInvocation: ID • LPAR RPAR
   44                 | ID • LPAR MethodInvocationaux RPAR
   45                 | ID • LPAR error RPAR
   51 Assignment: ID • ASSIGN Expr

    LPAR    shift, and go to state 71
    ASSIGN  shift, and go to state 72


State 38

    9 MethodBody: LBRACE HelpMethod • RBRACE

    RBRACE  shift, and go to state 73


State 39

   25 VarDecl: Type • ID VarDeclAux SEMICOLON

    ID  shift, and go to state 74


State 40

   11 HelpMethod: VarDecl • HelpMethod

    error      shift, and go to state 29
    INT        shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOL       shift, and go to state 21
    SEMICOLON  shift, and go to state 30
    LBRACE     shift, and go to state 31
    WHILE      shift, and go to state 32
    IF         shift, and go to state 33
    RETURN     shift, and go to state 34
    PRINT      shift, and go to state 35
    PARSEINT   shift, and go to state 36
    ID         shift, and go to state 37

    RBRACE  reduce using rule 12 (HelpMethod)

    HelpMethod        go to state 75
    Type              go to state 39
    VarDecl           go to state 40
    Statement         go to state 41
    MethodInvocation  go to state 42
    ParseArgs         go to state 43
    Assignment        go to state 44


State 41

   10 HelpMethod: Statement • HelpMethod

    error      shift, and go to state 29
    INT        shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOL       shift, and go to state 21
    SEMICOLON  shift, and go to state 30
    LBRACE     shift, and go to state 31
    WHILE      shift, and go to state 32
    IF         shift, and go to state 33
    RETURN     shift, and go to state 34
    PRINT      shift, and go to state 35
    PARSEINT   shift, and go to state 36
    ID         shift, and go to state 37

    RBRACE  reduce using rule 12 (HelpMethod)

    HelpMethod        go to state 76
    Type              go to state 39
    VarDecl           go to state 40
    Statement         go to state 41
    MethodInvocation  go to state 42
    ParseArgs         go to state 43
    Assignment        go to state 44


State 42

   34 Statement: MethodInvocation • SEMICOLON

    SEMICOLON  shift, and go to state 77


State 43

   36 Statement: ParseArgs • SEMICOLON

    SEMICOLON  shift, and go to state 78


State 44

   35 Statement: Assignment • SEMICOLON

    SEMICOLON  shift, and go to state 79


State 45

   15 HelpField: COMMA • ID HelpField

    ID  shift, and go to state 80


State 46

    7 MethodHeader: Type ID LPAR • FormalParams RPAR

    STRING  shift, and go to state 48
    INT     shift, and go to state 19
    DOUBLE  shift, and go to state 20
    BOOL    shift, and go to state 21

    $default  reduce using rule 22 (FormalParams)

    Type          go to state 49
    FormalParams  go to state 81


State 47

   13 FieldDecl: PUBLIC STATIC Type ID HelpField • SEMICOLON

    SEMICOLON  shift, and go to state 82


State 48

   21 FormalParams: STRING • LSQ RSQ ID

    LSQ  shift, and go to state 83


State 49

   20 FormalParams: Type • ID FormalParamsAux

    ID  shift, and go to state 84


State 50

    8 MethodHeader: VOID ID LPAR FormalParams • RPAR

    RPAR  shift, and go to state 85


State 51

   40 Statement: error SEMICOLON •

    $default  reduce using rule 40 (Statement)


State 52

   28 Statement: LBRACE Statement • StatementAux RBRACE

    error      shift, and go to state 29
    SEMICOLON  shift, and go to state 30
    LBRACE     shift, and go to state 31
    WHILE      shift, and go to state 32
    IF         shift, and go to state 33
    RETURN     shift, and go to state 34
    PRINT      shift, and go to state 35
    PARSEINT   shift, and go to state 36
    ID         shift, and go to state 37

    RBRACE  reduce using rule 42 (StatementAux)

    Statement         go to state 86
    StatementAux      go to state 87
    MethodInvocation  go to state 42
    ParseArgs         go to state 43
    Assignment        go to state 44


State 53

   31 Statement: WHILE LPAR • Expr RPAR Statement

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 62
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Assignment        go to state 66
    Expr              go to state 88
    Expr_aux          go to state 68


State 54

   29 Statement: IF LPAR • Expr RPAR Statement
   30          | IF LPAR • Expr RPAR Statement ELSE Statement

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 62
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Assignment        go to state 66
    Expr              go to state 89
    Expr_aux          go to state 68


State 55

   33 Statement: RETURN SEMICOLON •

    $default  reduce using rule 33 (Statement)


State 56

   73 Expr_aux: LPAR • Expr_aux RPAR
   81         | LPAR • error RPAR

    error     shift, and go to state 90
    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 92


State 57

   72 Expr_aux: PLUS • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 93


State 58

   70 Expr_aux: MINUS • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 94


State 59

   71 Expr_aux: NOT • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 95


State 60

   77 Expr_aux: REALLIT •

    $default  reduce using rule 77 (Expr_aux)


State 61

   76 Expr_aux: INTLIT •

    $default  reduce using rule 76 (Expr_aux)


State 62

   43 MethodInvocation: ID • LPAR RPAR
   44                 | ID • LPAR MethodInvocationaux RPAR
   45                 | ID • LPAR error RPAR
   51 Assignment: ID • ASSIGN Expr
   74 Expr_aux: ID •
   75         | ID • DOTLENGTH

    LPAR       shift, and go to state 71
    ASSIGN     shift, and go to state 72
    DOTLENGTH  shift, and go to state 96

    $default  reduce using rule 74 (Expr_aux)


State 63

   78 Expr_aux: BOOLLIT •

    $default  reduce using rule 78 (Expr_aux)


State 64

   79 Expr_aux: MethodInvocation •

    $default  reduce using rule 79 (Expr_aux)


State 65

   80 Expr_aux: ParseArgs •

    $default  reduce using rule 80 (Expr_aux)


State 66

   53 Expr: Assignment •

    $default  reduce using rule 53 (Expr)


State 67

   32 Statement: RETURN Expr • SEMICOLON

    SEMICOLON  shift, and go to state 97


State 68

   52 Expr: Expr_aux •
   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux

    PLUS    shift, and go to state 98
    MINUS   shift, and go to state 99
    STAR    shift, and go to state 100
    DIV     shift, and go to state 101
    MOD     shift, and go to state 102
    XOR     shift, and go to state 103
    OR      shift, and go to state 104
    AND     shift, and go to state 105
    EQ      shift, and go to state 106
    NE      shift, and go to state 107
    LE      shift, and go to state 108
    GE      shift, and go to state 109
    LT      shift, and go to state 110
    GT      shift, and go to state 111
    LSHIFT  shift, and go to state 112
    RSHIFT  shift, and go to state 113

    $default  reduce using rule 52 (Expr)


State 69

   38 Statement: PRINT LPAR • Expr RPAR SEMICOLON
   39          | PRINT LPAR • STRLIT RPAR SEMICOLON

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    STRLIT    shift, and go to state 114
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 62
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Assignment        go to state 66
    Expr              go to state 115
    Expr_aux          go to state 68


State 70

   49 ParseArgs: PARSEINT LPAR • ID LSQ Expr RSQ RPAR
   50          | PARSEINT LPAR • error RPAR

    error  shift, and go to state 116
    ID     shift, and go to state 117


State 71

   43 MethodInvocation: ID LPAR • RPAR
   44                 | ID LPAR • MethodInvocationaux RPAR
   45                 | ID LPAR • error RPAR

    error     shift, and go to state 118
    LPAR      shift, and go to state 56
    RPAR      shift, and go to state 119
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 62
    BOOLLIT   shift, and go to state 63

    MethodInvocation     go to state 64
    MethodInvocationaux  go to state 120
    ParseArgs            go to state 65
    Assignment           go to state 66
    Expr                 go to state 121
    Expr_aux             go to state 68


State 72

   51 Assignment: ID ASSIGN • Expr

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 62
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Assignment        go to state 66
    Expr              go to state 122
    Expr_aux          go to state 68


State 73

    9 MethodBody: LBRACE HelpMethod RBRACE •

    $default  reduce using rule 9 (MethodBody)


State 74

   25 VarDecl: Type ID • VarDeclAux SEMICOLON

    COMMA  shift, and go to state 123

    $default  reduce using rule 27 (VarDeclAux)

    VarDeclAux  go to state 124


State 75

   11 HelpMethod: VarDecl HelpMethod •

    $default  reduce using rule 11 (HelpMethod)


State 76

   10 HelpMethod: Statement HelpMethod •

    $default  reduce using rule 10 (HelpMethod)


State 77

   34 Statement: MethodInvocation SEMICOLON •

    $default  reduce using rule 34 (Statement)


State 78

   36 Statement: ParseArgs SEMICOLON •

    $default  reduce using rule 36 (Statement)


State 79

   35 Statement: Assignment SEMICOLON •

    $default  reduce using rule 35 (Statement)


State 80

   15 HelpField: COMMA ID • HelpField

    COMMA  shift, and go to state 45

    $default  reduce using rule 16 (HelpField)

    HelpField  go to state 125


State 81

    7 MethodHeader: Type ID LPAR FormalParams • RPAR

    RPAR  shift, and go to state 126


State 82

   13 FieldDecl: PUBLIC STATIC Type ID HelpField SEMICOLON •

    $default  reduce using rule 13 (FieldDecl)


State 83

   21 FormalParams: STRING LSQ • RSQ ID

    RSQ  shift, and go to state 127


State 84

   20 FormalParams: Type ID • FormalParamsAux

    COMMA  shift, and go to state 128

    $default  reduce using rule 24 (FormalParamsAux)

    FormalParamsAux  go to state 129


State 85

    8 MethodHeader: VOID ID LPAR FormalParams RPAR •

    $default  reduce using rule 8 (MethodHeader)


State 86

   41 StatementAux: Statement • StatementAux

    error      shift, and go to state 29
    SEMICOLON  shift, and go to state 30
    LBRACE     shift, and go to state 31
    WHILE      shift, and go to state 32
    IF         shift, and go to state 33
    RETURN     shift, and go to state 34
    PRINT      shift, and go to state 35
    PARSEINT   shift, and go to state 36
    ID         shift, and go to state 37

    RBRACE  reduce using rule 42 (StatementAux)

    Statement         go to state 86
    StatementAux      go to state 130
    MethodInvocation  go to state 42
    ParseArgs         go to state 43
    Assignment        go to state 44


State 87

   28 Statement: LBRACE Statement StatementAux • RBRACE

    RBRACE  shift, and go to state 131


State 88

   31 Statement: WHILE LPAR Expr • RPAR Statement

    RPAR  shift, and go to state 132


State 89

   29 Statement: IF LPAR Expr • RPAR Statement
   30          | IF LPAR Expr • RPAR Statement ELSE Statement

    RPAR  shift, and go to state 133


State 90

   81 Expr_aux: LPAR error • RPAR

    RPAR  shift, and go to state 134


State 91

   43 MethodInvocation: ID • LPAR RPAR
   44                 | ID • LPAR MethodInvocationaux RPAR
   45                 | ID • LPAR error RPAR
   74 Expr_aux: ID •
   75         | ID • DOTLENGTH

    LPAR       shift, and go to state 71
    DOTLENGTH  shift, and go to state 96

    $default  reduce using rule 74 (Expr_aux)


State 92

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux
   73         | LPAR Expr_aux • RPAR

    RPAR    shift, and go to state 135
    PLUS    shift, and go to state 98
    MINUS   shift, and go to state 99
    STAR    shift, and go to state 100
    DIV     shift, and go to state 101
    MOD     shift, and go to state 102
    XOR     shift, and go to state 103
    OR      shift, and go to state 104
    AND     shift, and go to state 105
    EQ      shift, and go to state 106
    NE      shift, and go to state 107
    LE      shift, and go to state 108
    GE      shift, and go to state 109
    LT      shift, and go to state 110
    GT      shift, and go to state 111
    LSHIFT  shift, and go to state 112
    RSHIFT  shift, and go to state 113


State 93

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux
   72         | PLUS Expr_aux •

    $default  reduce using rule 72 (Expr_aux)


State 94

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux
   70         | MINUS Expr_aux •

    $default  reduce using rule 70 (Expr_aux)


State 95

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux
   71         | NOT Expr_aux •

    $default  reduce using rule 71 (Expr_aux)


State 96

   75 Expr_aux: ID DOTLENGTH •

    $default  reduce using rule 75 (Expr_aux)


State 97

   32 Statement: RETURN Expr SEMICOLON •

    $default  reduce using rule 32 (Statement)


State 98

   54 Expr_aux: Expr_aux PLUS • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 136


State 99

   55 Expr_aux: Expr_aux MINUS • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 137


State 100

   56 Expr_aux: Expr_aux STAR • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 138


State 101

   57 Expr_aux: Expr_aux DIV • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 139


State 102

   58 Expr_aux: Expr_aux MOD • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 140


State 103

   60 Expr_aux: Expr_aux XOR • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 141


State 104

   59 Expr_aux: Expr_aux OR • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 142


State 105

   61 Expr_aux: Expr_aux AND • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 143


State 106

   64 Expr_aux: Expr_aux EQ • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 144


State 107

   65 Expr_aux: Expr_aux NE • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 145


State 108

   68 Expr_aux: Expr_aux LE • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 146


State 109

   69 Expr_aux: Expr_aux GE • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 147


State 110

   66 Expr_aux: Expr_aux LT • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 148


State 111

   67 Expr_aux: Expr_aux GT • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 149


State 112

   62 Expr_aux: Expr_aux LSHIFT • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 150


State 113

   63 Expr_aux: Expr_aux RSHIFT • Expr_aux

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 91
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Expr_aux          go to state 151


State 114

   39 Statement: PRINT LPAR STRLIT • RPAR SEMICOLON

    RPAR  shift, and go to state 152


State 115

   38 Statement: PRINT LPAR Expr • RPAR SEMICOLON

    RPAR  shift, and go to state 153


State 116

   50 ParseArgs: PARSEINT LPAR error • RPAR

    RPAR  shift, and go to state 154


State 117

   49 ParseArgs: PARSEINT LPAR ID • LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 155


State 118

   45 MethodInvocation: ID LPAR error • RPAR

    RPAR  shift, and go to state 156


State 119

   43 MethodInvocation: ID LPAR RPAR •

    $default  reduce using rule 43 (MethodInvocation)


State 120

   44 MethodInvocation: ID LPAR MethodInvocationaux • RPAR

    RPAR  shift, and go to state 157


State 121

   46 MethodInvocationaux: Expr • MethodInvocationaux_new

    COMMA  shift, and go to state 158

    $default  reduce using rule 48 (MethodInvocationaux_new)

    MethodInvocationaux_new  go to state 159


State 122

   51 Assignment: ID ASSIGN Expr •

    $default  reduce using rule 51 (Assignment)


State 123

   26 VarDeclAux: COMMA • ID VarDeclAux

    ID  shift, and go to state 160


State 124

   25 VarDecl: Type ID VarDeclAux • SEMICOLON

    SEMICOLON  shift, and go to state 161


State 125

   15 HelpField: COMMA ID HelpField •

    $default  reduce using rule 15 (HelpField)


State 126

    7 MethodHeader: Type ID LPAR FormalParams RPAR •

    $default  reduce using rule 7 (MethodHeader)


State 127

   21 FormalParams: STRING LSQ RSQ • ID

    ID  shift, and go to state 162


State 128

   23 FormalParamsAux: COMMA • Type ID FormalParamsAux

    INT     shift, and go to state 19
    DOUBLE  shift, and go to state 20
    BOOL    shift, and go to state 21

    Type  go to state 163


State 129

   20 FormalParams: Type ID FormalParamsAux •

    $default  reduce using rule 20 (FormalParams)


State 130

   41 StatementAux: Statement StatementAux •

    $default  reduce using rule 41 (StatementAux)


State 131

   28 Statement: LBRACE Statement StatementAux RBRACE •

    $default  reduce using rule 28 (Statement)


State 132

   31 Statement: WHILE LPAR Expr RPAR • Statement

    error      shift, and go to state 29
    SEMICOLON  shift, and go to state 30
    LBRACE     shift, and go to state 31
    WHILE      shift, and go to state 32
    IF         shift, and go to state 33
    RETURN     shift, and go to state 34
    PRINT      shift, and go to state 35
    PARSEINT   shift, and go to state 36
    ID         shift, and go to state 37

    Statement         go to state 164
    MethodInvocation  go to state 42
    ParseArgs         go to state 43
    Assignment        go to state 44


State 133

   29 Statement: IF LPAR Expr RPAR • Statement
   30          | IF LPAR Expr RPAR • Statement ELSE Statement

    error      shift, and go to state 29
    SEMICOLON  shift, and go to state 30
    LBRACE     shift, and go to state 31
    WHILE      shift, and go to state 32
    IF         shift, and go to state 33
    RETURN     shift, and go to state 34
    PRINT      shift, and go to state 35
    PARSEINT   shift, and go to state 36
    ID         shift, and go to state 37

    Statement         go to state 165
    MethodInvocation  go to state 42
    ParseArgs         go to state 43
    Assignment        go to state 44


State 134

   81 Expr_aux: LPAR error RPAR •

    $default  reduce using rule 81 (Expr_aux)


State 135

   73 Expr_aux: LPAR Expr_aux RPAR •

    $default  reduce using rule 73 (Expr_aux)


State 136

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   54         | Expr_aux PLUS Expr_aux •
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux

    STAR  shift, and go to state 100
    DIV   shift, and go to state 101
    MOD   shift, and go to state 102

    $default  reduce using rule 54 (Expr_aux)


State 137

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   55         | Expr_aux MINUS Expr_aux •
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux

    STAR  shift, and go to state 100
    DIV   shift, and go to state 101
    MOD   shift, and go to state 102

    $default  reduce using rule 55 (Expr_aux)


State 138

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   56         | Expr_aux STAR Expr_aux •
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux

    $default  reduce using rule 56 (Expr_aux)


State 139

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   57         | Expr_aux DIV Expr_aux •
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux

    $default  reduce using rule 57 (Expr_aux)


State 140

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   58         | Expr_aux MOD Expr_aux •
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux

    $default  reduce using rule 58 (Expr_aux)


State 141

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   60         | Expr_aux XOR Expr_aux •
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux

    PLUS    shift, and go to state 98
    MINUS   shift, and go to state 99
    STAR    shift, and go to state 100
    DIV     shift, and go to state 101
    MOD     shift, and go to state 102
    EQ      shift, and go to state 106
    NE      shift, and go to state 107
    LE      shift, and go to state 108
    GE      shift, and go to state 109
    LT      shift, and go to state 110
    GT      shift, and go to state 111
    LSHIFT  shift, and go to state 112
    RSHIFT  shift, and go to state 113

    $default  reduce using rule 60 (Expr_aux)


State 142

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   59         | Expr_aux OR Expr_aux •
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux

    PLUS    shift, and go to state 98
    MINUS   shift, and go to state 99
    STAR    shift, and go to state 100
    DIV     shift, and go to state 101
    MOD     shift, and go to state 102
    XOR     shift, and go to state 103
    AND     shift, and go to state 105
    EQ      shift, and go to state 106
    NE      shift, and go to state 107
    LE      shift, and go to state 108
    GE      shift, and go to state 109
    LT      shift, and go to state 110
    GT      shift, and go to state 111
    LSHIFT  shift, and go to state 112
    RSHIFT  shift, and go to state 113

    $default  reduce using rule 59 (Expr_aux)


State 143

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   61         | Expr_aux AND Expr_aux •
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux

    PLUS    shift, and go to state 98
    MINUS   shift, and go to state 99
    STAR    shift, and go to state 100
    DIV     shift, and go to state 101
    MOD     shift, and go to state 102
    XOR     shift, and go to state 103
    EQ      shift, and go to state 106
    NE      shift, and go to state 107
    LE      shift, and go to state 108
    GE      shift, and go to state 109
    LT      shift, and go to state 110
    GT      shift, and go to state 111
    LSHIFT  shift, and go to state 112
    RSHIFT  shift, and go to state 113

    $default  reduce using rule 61 (Expr_aux)


State 144

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   64         | Expr_aux EQ Expr_aux •
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    MOD    shift, and go to state 102
    LE     shift, and go to state 108
    GE     shift, and go to state 109
    LT     shift, and go to state 110
    GT     shift, and go to state 111

    $default  reduce using rule 64 (Expr_aux)


State 145

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   65         | Expr_aux NE Expr_aux •
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    MOD    shift, and go to state 102
    LE     shift, and go to state 108
    GE     shift, and go to state 109
    LT     shift, and go to state 110
    GT     shift, and go to state 111

    $default  reduce using rule 65 (Expr_aux)


State 146

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   68         | Expr_aux LE Expr_aux •
   69         | Expr_aux • GE Expr_aux

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    MOD    shift, and go to state 102

    $default  reduce using rule 68 (Expr_aux)


State 147

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux
   69         | Expr_aux GE Expr_aux •

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    MOD    shift, and go to state 102

    $default  reduce using rule 69 (Expr_aux)


State 148

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   66         | Expr_aux LT Expr_aux •
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    MOD    shift, and go to state 102

    $default  reduce using rule 66 (Expr_aux)


State 149

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   67         | Expr_aux GT Expr_aux •
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    MOD    shift, and go to state 102

    $default  reduce using rule 67 (Expr_aux)


State 150

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   62         | Expr_aux LSHIFT Expr_aux •
   63         | Expr_aux • RSHIFT Expr_aux
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    MOD    shift, and go to state 102
    EQ     shift, and go to state 106
    NE     shift, and go to state 107
    LE     shift, and go to state 108
    GE     shift, and go to state 109
    LT     shift, and go to state 110
    GT     shift, and go to state 111

    $default  reduce using rule 62 (Expr_aux)


State 151

   54 Expr_aux: Expr_aux • PLUS Expr_aux
   55         | Expr_aux • MINUS Expr_aux
   56         | Expr_aux • STAR Expr_aux
   57         | Expr_aux • DIV Expr_aux
   58         | Expr_aux • MOD Expr_aux
   59         | Expr_aux • OR Expr_aux
   60         | Expr_aux • XOR Expr_aux
   61         | Expr_aux • AND Expr_aux
   62         | Expr_aux • LSHIFT Expr_aux
   63         | Expr_aux • RSHIFT Expr_aux
   63         | Expr_aux RSHIFT Expr_aux •
   64         | Expr_aux • EQ Expr_aux
   65         | Expr_aux • NE Expr_aux
   66         | Expr_aux • LT Expr_aux
   67         | Expr_aux • GT Expr_aux
   68         | Expr_aux • LE Expr_aux
   69         | Expr_aux • GE Expr_aux

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    MOD    shift, and go to state 102
    EQ     shift, and go to state 106
    NE     shift, and go to state 107
    LE     shift, and go to state 108
    GE     shift, and go to state 109
    LT     shift, and go to state 110
    GT     shift, and go to state 111

    $default  reduce using rule 63 (Expr_aux)


State 152

   39 Statement: PRINT LPAR STRLIT RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 166


State 153

   38 Statement: PRINT LPAR Expr RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 167


State 154

   50 ParseArgs: PARSEINT LPAR error RPAR •

    $default  reduce using rule 50 (ParseArgs)


State 155

   49 ParseArgs: PARSEINT LPAR ID LSQ • Expr RSQ RPAR

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 62
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Assignment        go to state 66
    Expr              go to state 168
    Expr_aux          go to state 68


State 156

   45 MethodInvocation: ID LPAR error RPAR •

    $default  reduce using rule 45 (MethodInvocation)


State 157

   44 MethodInvocation: ID LPAR MethodInvocationaux RPAR •

    $default  reduce using rule 44 (MethodInvocation)


State 158

   47 MethodInvocationaux_new: COMMA • Expr MethodInvocationaux_new

    LPAR      shift, and go to state 56
    PLUS      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PARSEINT  shift, and go to state 36
    REALLIT   shift, and go to state 60
    INTLIT    shift, and go to state 61
    ID        shift, and go to state 62
    BOOLLIT   shift, and go to state 63

    MethodInvocation  go to state 64
    ParseArgs         go to state 65
    Assignment        go to state 66
    Expr              go to state 169
    Expr_aux          go to state 68


State 159

   46 MethodInvocationaux: Expr MethodInvocationaux_new •

    $default  reduce using rule 46 (MethodInvocationaux)


State 160

   26 VarDeclAux: COMMA ID • VarDeclAux

    COMMA  shift, and go to state 123

    $default  reduce using rule 27 (VarDeclAux)

    VarDeclAux  go to state 170


State 161

   25 VarDecl: Type ID VarDeclAux SEMICOLON •

    $default  reduce using rule 25 (VarDecl)


State 162

   21 FormalParams: STRING LSQ RSQ ID •

    $default  reduce using rule 21 (FormalParams)


State 163

   23 FormalParamsAux: COMMA Type • ID FormalParamsAux

    ID  shift, and go to state 171


State 164

   31 Statement: WHILE LPAR Expr RPAR Statement •

    $default  reduce using rule 31 (Statement)


State 165

   29 Statement: IF LPAR Expr RPAR Statement •
   30          | IF LPAR Expr RPAR Statement • ELSE Statement

    ELSE  shift, and go to state 172

    $default  reduce using rule 29 (Statement)


State 166

   39 Statement: PRINT LPAR STRLIT RPAR SEMICOLON •

    $default  reduce using rule 39 (Statement)


State 167

   38 Statement: PRINT LPAR Expr RPAR SEMICOLON •

    $default  reduce using rule 38 (Statement)


State 168

   49 ParseArgs: PARSEINT LPAR ID LSQ Expr • RSQ RPAR

    RSQ  shift, and go to state 173


State 169

   47 MethodInvocationaux_new: COMMA Expr • MethodInvocationaux_new

    COMMA  shift, and go to state 158

    $default  reduce using rule 48 (MethodInvocationaux_new)

    MethodInvocationaux_new  go to state 174


State 170

   26 VarDeclAux: COMMA ID VarDeclAux •

    $default  reduce using rule 26 (VarDeclAux)


State 171

   23 FormalParamsAux: COMMA Type ID • FormalParamsAux

    COMMA  shift, and go to state 128

    $default  reduce using rule 24 (FormalParamsAux)

    FormalParamsAux  go to state 175


State 172

   30 Statement: IF LPAR Expr RPAR Statement ELSE • Statement

    error      shift, and go to state 29
    SEMICOLON  shift, and go to state 30
    LBRACE     shift, and go to state 31
    WHILE      shift, and go to state 32
    IF         shift, and go to state 33
    RETURN     shift, and go to state 34
    PRINT      shift, and go to state 35
    PARSEINT   shift, and go to state 36
    ID         shift, and go to state 37

    Statement         go to state 176
    MethodInvocation  go to state 42
    ParseArgs         go to state 43
    Assignment        go to state 44


State 173

   49 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ • RPAR

    RPAR  shift, and go to state 177


State 174

   47 MethodInvocationaux_new: COMMA Expr MethodInvocationaux_new •

    $default  reduce using rule 47 (MethodInvocationaux_new)


State 175

   23 FormalParamsAux: COMMA Type ID FormalParamsAux •

    $default  reduce using rule 23 (FormalParamsAux)


State 176

   30 Statement: IF LPAR Expr RPAR Statement ELSE Statement •

    $default  reduce using rule 30 (Statement)


State 177

   49 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR •

    $default  reduce using rule 49 (ParseArgs)
