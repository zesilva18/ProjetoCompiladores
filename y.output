Terminals unused in grammar

    ARROW
    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID LBRACE ProgramAux RBRACE

    2 ProgramAux: ε
    3           | MethodDecl ProgramAux
    4           | FieldDecl ProgramAux
    5           | SEMICOLON ProgramAux

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

    7 FieldDecl: PUBLIC STATIC tipo ID FieldDeclAux SEMICOLON
    8          | error SEMICOLON

    9 FieldDeclAux: COMMA ID FieldDeclAux
   10             | ε

   11 tipo: INT
   12     | DOUBLE
   13     | BOOL

   14 MethodHeader: tipo ID LPAR FormalParams RPAR
   15             | VOID ID LPAR FormalParams RPAR

   16 FormalParams: tipo ID FormalParamsAux
   17             | STRING LSQ RSQ ID
   18             | ε

   19 FormalParamsAux: COMMA tipo ID FormalParamsAux
   20                | ε

   21 MethodBody: LBRACE MethodBodyAux RBRACE

   22 MethodBodyAux: Statement MethodBodyAux
   23              | VarDecl MethodBodyAux
   24              | ε

   25 VarDecl: tipo ID VarDeclAux SEMICOLON

   26 VarDeclAux: COMMA ID VarDeclAux
   27           | ε

   28 Statement: LBRACE Statement StatementAux RBRACE
   29          | LBRACE RBRACE
   30          | IF LPAR Expr RPAR Statement
   31          | IF LPAR Expr RPAR Statement ELSE Statement
   32          | WHILE LPAR Expr RPAR Statement
   33          | RETURN Expr SEMICOLON
   34          | RETURN SEMICOLON
   35          | MethodInvocation SEMICOLON
   36          | Assignment SEMICOLON
   37          | ParseArgs SEMICOLON
   38          | SEMICOLON
   39          | PRINT LPAR Expr RPAR SEMICOLON
   40          | PRINT LPAR STRLIT RPAR SEMICOLON
   41          | error SEMICOLON

   42 StatementAux: Statement StatementAux
   43             | ε

   44 MethodInvocation: ID LPAR RPAR
   45                 | ID LPAR MethodInvocationAux RPAR
   46                 | ID LPAR error RPAR

   47 MethodInvocationAux: Expr MethodInvocationAux_2

   48 MethodInvocationAux_2: ε
   49                      | COMMA Expr MethodInvocationAux_2

   50 Assignment: ID ASSIGN Expr

   51 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR
   52          | PARSEINT LPAR error RPAR

   53 Expr: ExprAux
   54     | Assignment

   55 ExprAux: ExprAux PLUS ExprAux
   56        | ExprAux MINUS ExprAux
   57        | ExprAux STAR ExprAux
   58        | ExprAux DIV ExprAux
   59        | ExprAux MOD ExprAux
   60        | ExprAux OR ExprAux
   61        | ExprAux XOR ExprAux
   62        | ExprAux AND ExprAux
   63        | ExprAux LSHIFT ExprAux
   64        | ExprAux RSHIFT ExprAux
   65        | ExprAux EQ ExprAux
   66        | ExprAux NE ExprAux
   67        | ExprAux LT ExprAux
   68        | ExprAux GT ExprAux
   69        | ExprAux LE ExprAux
   70        | ExprAux GE ExprAux
   71        | MINUS ExprAux
   72        | NOT ExprAux
   73        | PLUS ExprAux
   74        | LPAR Expr RPAR
   75        | ID
   76        | ID DOTLENGTH
   77        | INTLIT
   78        | REALLIT
   79        | BOOLLIT
   80        | MethodInvocation
   81        | ParseArgs
   82        | LPAR error RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256) 8 41 46 52 82
    CLASS (258) 1
    PUBLIC (259) 6 7
    STATIC (260) 6 7
    STRING (261) 17
    VOID (262) 15
    INT (263) 11
    DOUBLE (264) 12
    BOOL (265) 13
    SEMICOLON (266) 5 7 8 25 33 34 35 36 37 38 39 40 41
    COMMA (267) 9 19 26 49
    LBRACE (268) 1 21 28 29
    RBRACE (269) 1 21 28 29
    LPAR (270) 14 15 30 31 32 39 40 44 45 46 51 52 74 82
    RPAR (271) 14 15 30 31 32 39 40 44 45 46 51 52 74 82
    LSQ (272) 17 51
    RSQ (273) 17 51
    ASSIGN (274) 50
    PLUS (275) 55 73
    MINUS (276) 56 71
    STAR (277) 57
    DIV (278) 58
    MOD (279) 59
    XOR (280) 61
    OR (281) 60
    AND (282) 62
    EQ (283) 65
    NE (284) 66
    LE (285) 69
    GE (286) 70
    LT (287) 67
    GT (288) 68
    NOT (289) 72
    WHILE (290) 32
    IF (291) 30 31
    ELSE (292) 31
    RETURN (293) 33 34
    ARROW (294)
    LSHIFT (295) 63
    RSHIFT (296) 64
    DOTLENGTH (297) 76
    PRINT (298) 39 40
    PARSEINT (299) 51 52
    RESERVED (300)
    REALLIT <string> (301) 78
    STRLIT <string> (302) 40
    INTLIT <string> (303) 77
    ID <string> (304) 1 7 9 14 15 16 17 19 25 26 44 45 46 50 51 75 76
    BOOLLIT <string> (305) 79


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    Program <ast> (52)
        on left: 1
        on right: 0
    ProgramAux <ast> (53)
        on left: 2 3 4 5
        on right: 1 3 4 5
    MethodDecl <ast> (54)
        on left: 6
        on right: 3
    FieldDecl <ast> (55)
        on left: 7 8
        on right: 4
    FieldDeclAux <ast> (56)
        on left: 9 10
        on right: 7 9
    tipo <ast> (57)
        on left: 11 12 13
        on right: 7 14 16 19 25
    MethodHeader <ast> (58)
        on left: 14 15
        on right: 6
    FormalParams <ast> (59)
        on left: 16 17 18
        on right: 14 15
    FormalParamsAux <ast> (60)
        on left: 19 20
        on right: 16 19
    MethodBody <ast> (61)
        on left: 21
        on right: 6
    MethodBodyAux <ast> (62)
        on left: 22 23 24
        on right: 21 22 23
    VarDecl <ast> (63)
        on left: 25
        on right: 23
    VarDeclAux <ast> (64)
        on left: 26 27
        on right: 25 26
    Statement <ast> (65)
        on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41
        on right: 22 28 30 31 32 42
    StatementAux <ast> (66)
        on left: 42 43
        on right: 28 42
    MethodInvocation <ast> (67)
        on left: 44 45 46
        on right: 35 80
    MethodInvocationAux <ast> (68)
        on left: 47
        on right: 45
    MethodInvocationAux_2 <ast> (69)
        on left: 48 49
        on right: 47 49
    Assignment <ast> (70)
        on left: 50
        on right: 36 54
    ParseArgs <ast> (71)
        on left: 51 52
        on right: 37 81
    Expr <ast> (72)
        on left: 53 54
        on right: 30 31 32 33 39 47 49 50 51 74
    ExprAux <ast> (73)
        on left: 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82
        on right: 53 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73


State 0

    0 $accept: • Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS • ID LBRACE ProgramAux RBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID • LBRACE ProgramAux RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end •

    $default  accept


State 5

    1 Program: CLASS ID LBRACE • ProgramAux RBRACE

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 2 (ProgramAux)

    ProgramAux  go to state 9
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 6

    8 FieldDecl: error • SEMICOLON

    SEMICOLON  shift, and go to state 12


State 7

    6 MethodDecl: PUBLIC • STATIC MethodHeader MethodBody
    7 FieldDecl: PUBLIC • STATIC tipo ID FieldDeclAux SEMICOLON

    STATIC  shift, and go to state 13


State 8

    5 ProgramAux: SEMICOLON • ProgramAux

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 2 (ProgramAux)

    ProgramAux  go to state 14
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 9

    1 Program: CLASS ID LBRACE ProgramAux • RBRACE

    RBRACE  shift, and go to state 15


State 10

    3 ProgramAux: MethodDecl • ProgramAux

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 2 (ProgramAux)

    ProgramAux  go to state 16
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 11

    4 ProgramAux: FieldDecl • ProgramAux

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 2 (ProgramAux)

    ProgramAux  go to state 17
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 12

    8 FieldDecl: error SEMICOLON •

    $default  reduce using rule 8 (FieldDecl)


State 13

    6 MethodDecl: PUBLIC STATIC • MethodHeader MethodBody
    7 FieldDecl: PUBLIC STATIC • tipo ID FieldDeclAux SEMICOLON

    VOID    shift, and go to state 18
    INT     shift, and go to state 19
    DOUBLE  shift, and go to state 20
    BOOL    shift, and go to state 21

    tipo          go to state 22
    MethodHeader  go to state 23


State 14

    5 ProgramAux: SEMICOLON ProgramAux •

    $default  reduce using rule 5 (ProgramAux)


State 15

    1 Program: CLASS ID LBRACE ProgramAux RBRACE •

    $default  reduce using rule 1 (Program)


State 16

    3 ProgramAux: MethodDecl ProgramAux •

    $default  reduce using rule 3 (ProgramAux)


State 17

    4 ProgramAux: FieldDecl ProgramAux •

    $default  reduce using rule 4 (ProgramAux)


State 18

   15 MethodHeader: VOID • ID LPAR FormalParams RPAR

    ID  shift, and go to state 24


State 19

   11 tipo: INT •

    $default  reduce using rule 11 (tipo)


State 20

   12 tipo: DOUBLE •

    $default  reduce using rule 12 (tipo)


State 21

   13 tipo: BOOL •

    $default  reduce using rule 13 (tipo)


State 22

    7 FieldDecl: PUBLIC STATIC tipo • ID FieldDeclAux SEMICOLON
   14 MethodHeader: tipo • ID LPAR FormalParams RPAR

    ID  shift, and go to state 25


State 23

    6 MethodDecl: PUBLIC STATIC MethodHeader • MethodBody

    LBRACE  shift, and go to state 26

    MethodBody  go to state 27


State 24

   15 MethodHeader: VOID ID • LPAR FormalParams RPAR

    LPAR  shift, and go to state 28


State 25

    7 FieldDecl: PUBLIC STATIC tipo ID • FieldDeclAux SEMICOLON
   14 MethodHeader: tipo ID • LPAR FormalParams RPAR

    COMMA  shift, and go to state 29
    LPAR   shift, and go to state 30

    $default  reduce using rule 10 (FieldDeclAux)

    FieldDeclAux  go to state 31


State 26

   21 MethodBody: LBRACE • MethodBodyAux RBRACE

    error      shift, and go to state 32
    INT        shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOL       shift, and go to state 21
    SEMICOLON  shift, and go to state 33
    LBRACE     shift, and go to state 34
    WHILE      shift, and go to state 35
    IF         shift, and go to state 36
    RETURN     shift, and go to state 37
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    ID         shift, and go to state 40

    RBRACE  reduce using rule 24 (MethodBodyAux)

    tipo              go to state 41
    MethodBodyAux     go to state 42
    VarDecl           go to state 43
    Statement         go to state 44
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 27

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody •

    $default  reduce using rule 6 (MethodDecl)


State 28

   15 MethodHeader: VOID ID LPAR • FormalParams RPAR

    STRING  shift, and go to state 48
    INT     shift, and go to state 19
    DOUBLE  shift, and go to state 20
    BOOL    shift, and go to state 21

    $default  reduce using rule 18 (FormalParams)

    tipo          go to state 49
    FormalParams  go to state 50


State 29

    9 FieldDeclAux: COMMA • ID FieldDeclAux

    ID  shift, and go to state 51


State 30

   14 MethodHeader: tipo ID LPAR • FormalParams RPAR

    STRING  shift, and go to state 48
    INT     shift, and go to state 19
    DOUBLE  shift, and go to state 20
    BOOL    shift, and go to state 21

    $default  reduce using rule 18 (FormalParams)

    tipo          go to state 49
    FormalParams  go to state 52


State 31

    7 FieldDecl: PUBLIC STATIC tipo ID FieldDeclAux • SEMICOLON

    SEMICOLON  shift, and go to state 53


State 32

   41 Statement: error • SEMICOLON

    SEMICOLON  shift, and go to state 54


State 33

   38 Statement: SEMICOLON •

    $default  reduce using rule 38 (Statement)


State 34

   28 Statement: LBRACE • Statement StatementAux RBRACE
   29          | LBRACE • RBRACE

    error      shift, and go to state 32
    SEMICOLON  shift, and go to state 33
    LBRACE     shift, and go to state 34
    RBRACE     shift, and go to state 55
    WHILE      shift, and go to state 35
    IF         shift, and go to state 36
    RETURN     shift, and go to state 37
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    ID         shift, and go to state 40

    Statement         go to state 56
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 35

   32 Statement: WHILE • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 57


State 36

   30 Statement: IF • LPAR Expr RPAR Statement
   31          | IF • LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 58


State 37

   33 Statement: RETURN • Expr SEMICOLON
   34          | RETURN • SEMICOLON

    SEMICOLON  shift, and go to state 59
    LPAR       shift, and go to state 60
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62
    NOT        shift, and go to state 63
    PARSEINT   shift, and go to state 39
    REALLIT    shift, and go to state 64
    INTLIT     shift, and go to state 65
    ID         shift, and go to state 66
    BOOLLIT    shift, and go to state 67

    MethodInvocation  go to state 68
    Assignment        go to state 69
    ParseArgs         go to state 70
    Expr              go to state 71
    ExprAux           go to state 72


State 38

   39 Statement: PRINT • LPAR Expr RPAR SEMICOLON
   40          | PRINT • LPAR STRLIT RPAR SEMICOLON

    LPAR  shift, and go to state 73


State 39

   51 ParseArgs: PARSEINT • LPAR ID LSQ Expr RSQ RPAR
   52          | PARSEINT • LPAR error RPAR

    LPAR  shift, and go to state 74


State 40

   44 MethodInvocation: ID • LPAR RPAR
   45                 | ID • LPAR MethodInvocationAux RPAR
   46                 | ID • LPAR error RPAR
   50 Assignment: ID • ASSIGN Expr

    LPAR    shift, and go to state 75
    ASSIGN  shift, and go to state 76


State 41

   25 VarDecl: tipo • ID VarDeclAux SEMICOLON

    ID  shift, and go to state 77


State 42

   21 MethodBody: LBRACE MethodBodyAux • RBRACE

    RBRACE  shift, and go to state 78


State 43

   23 MethodBodyAux: VarDecl • MethodBodyAux

    error      shift, and go to state 32
    INT        shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOL       shift, and go to state 21
    SEMICOLON  shift, and go to state 33
    LBRACE     shift, and go to state 34
    WHILE      shift, and go to state 35
    IF         shift, and go to state 36
    RETURN     shift, and go to state 37
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    ID         shift, and go to state 40

    RBRACE  reduce using rule 24 (MethodBodyAux)

    tipo              go to state 41
    MethodBodyAux     go to state 79
    VarDecl           go to state 43
    Statement         go to state 44
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 44

   22 MethodBodyAux: Statement • MethodBodyAux

    error      shift, and go to state 32
    INT        shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOL       shift, and go to state 21
    SEMICOLON  shift, and go to state 33
    LBRACE     shift, and go to state 34
    WHILE      shift, and go to state 35
    IF         shift, and go to state 36
    RETURN     shift, and go to state 37
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    ID         shift, and go to state 40

    RBRACE  reduce using rule 24 (MethodBodyAux)

    tipo              go to state 41
    MethodBodyAux     go to state 80
    VarDecl           go to state 43
    Statement         go to state 44
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 45

   35 Statement: MethodInvocation • SEMICOLON

    SEMICOLON  shift, and go to state 81


State 46

   36 Statement: Assignment • SEMICOLON

    SEMICOLON  shift, and go to state 82


State 47

   37 Statement: ParseArgs • SEMICOLON

    SEMICOLON  shift, and go to state 83


State 48

   17 FormalParams: STRING • LSQ RSQ ID

    LSQ  shift, and go to state 84


State 49

   16 FormalParams: tipo • ID FormalParamsAux

    ID  shift, and go to state 85


State 50

   15 MethodHeader: VOID ID LPAR FormalParams • RPAR

    RPAR  shift, and go to state 86


State 51

    9 FieldDeclAux: COMMA ID • FieldDeclAux

    COMMA  shift, and go to state 29

    $default  reduce using rule 10 (FieldDeclAux)

    FieldDeclAux  go to state 87


State 52

   14 MethodHeader: tipo ID LPAR FormalParams • RPAR

    RPAR  shift, and go to state 88


State 53

    7 FieldDecl: PUBLIC STATIC tipo ID FieldDeclAux SEMICOLON •

    $default  reduce using rule 7 (FieldDecl)


State 54

   41 Statement: error SEMICOLON •

    $default  reduce using rule 41 (Statement)


State 55

   29 Statement: LBRACE RBRACE •

    $default  reduce using rule 29 (Statement)


State 56

   28 Statement: LBRACE Statement • StatementAux RBRACE

    error      shift, and go to state 32
    SEMICOLON  shift, and go to state 33
    LBRACE     shift, and go to state 34
    WHILE      shift, and go to state 35
    IF         shift, and go to state 36
    RETURN     shift, and go to state 37
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    ID         shift, and go to state 40

    RBRACE  reduce using rule 43 (StatementAux)

    Statement         go to state 89
    StatementAux      go to state 90
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 57

   32 Statement: WHILE LPAR • Expr RPAR Statement

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    Assignment        go to state 69
    ParseArgs         go to state 70
    Expr              go to state 91
    ExprAux           go to state 72


State 58

   30 Statement: IF LPAR • Expr RPAR Statement
   31          | IF LPAR • Expr RPAR Statement ELSE Statement

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    Assignment        go to state 69
    ParseArgs         go to state 70
    Expr              go to state 92
    ExprAux           go to state 72


State 59

   34 Statement: RETURN SEMICOLON •

    $default  reduce using rule 34 (Statement)


State 60

   74 ExprAux: LPAR • Expr RPAR
   82        | LPAR • error RPAR

    error     shift, and go to state 93
    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    Assignment        go to state 69
    ParseArgs         go to state 70
    Expr              go to state 94
    ExprAux           go to state 72


State 61

   73 ExprAux: PLUS • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 96


State 62

   71 ExprAux: MINUS • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 97


State 63

   72 ExprAux: NOT • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 98


State 64

   78 ExprAux: REALLIT •

    $default  reduce using rule 78 (ExprAux)


State 65

   77 ExprAux: INTLIT •

    $default  reduce using rule 77 (ExprAux)


State 66

   44 MethodInvocation: ID • LPAR RPAR
   45                 | ID • LPAR MethodInvocationAux RPAR
   46                 | ID • LPAR error RPAR
   50 Assignment: ID • ASSIGN Expr
   75 ExprAux: ID •
   76        | ID • DOTLENGTH

    LPAR       shift, and go to state 75
    ASSIGN     shift, and go to state 76
    DOTLENGTH  shift, and go to state 99

    $default  reduce using rule 75 (ExprAux)


State 67

   79 ExprAux: BOOLLIT •

    $default  reduce using rule 79 (ExprAux)


State 68

   80 ExprAux: MethodInvocation •

    $default  reduce using rule 80 (ExprAux)


State 69

   54 Expr: Assignment •

    $default  reduce using rule 54 (Expr)


State 70

   81 ExprAux: ParseArgs •

    $default  reduce using rule 81 (ExprAux)


State 71

   33 Statement: RETURN Expr • SEMICOLON

    SEMICOLON  shift, and go to state 100


State 72

   53 Expr: ExprAux •
   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux

    PLUS    shift, and go to state 101
    MINUS   shift, and go to state 102
    STAR    shift, and go to state 103
    DIV     shift, and go to state 104
    MOD     shift, and go to state 105
    XOR     shift, and go to state 106
    OR      shift, and go to state 107
    AND     shift, and go to state 108
    EQ      shift, and go to state 109
    NE      shift, and go to state 110
    LE      shift, and go to state 111
    GE      shift, and go to state 112
    LT      shift, and go to state 113
    GT      shift, and go to state 114
    LSHIFT  shift, and go to state 115
    RSHIFT  shift, and go to state 116

    $default  reduce using rule 53 (Expr)


State 73

   39 Statement: PRINT LPAR • Expr RPAR SEMICOLON
   40          | PRINT LPAR • STRLIT RPAR SEMICOLON

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    STRLIT    shift, and go to state 117
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    Assignment        go to state 69
    ParseArgs         go to state 70
    Expr              go to state 118
    ExprAux           go to state 72


State 74

   51 ParseArgs: PARSEINT LPAR • ID LSQ Expr RSQ RPAR
   52          | PARSEINT LPAR • error RPAR

    error  shift, and go to state 119
    ID     shift, and go to state 120


State 75

   44 MethodInvocation: ID LPAR • RPAR
   45                 | ID LPAR • MethodInvocationAux RPAR
   46                 | ID LPAR • error RPAR

    error     shift, and go to state 121
    LPAR      shift, and go to state 60
    RPAR      shift, and go to state 122
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66
    BOOLLIT   shift, and go to state 67

    MethodInvocation     go to state 68
    MethodInvocationAux  go to state 123
    Assignment           go to state 69
    ParseArgs            go to state 70
    Expr                 go to state 124
    ExprAux              go to state 72


State 76

   50 Assignment: ID ASSIGN • Expr

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    Assignment        go to state 69
    ParseArgs         go to state 70
    Expr              go to state 125
    ExprAux           go to state 72


State 77

   25 VarDecl: tipo ID • VarDeclAux SEMICOLON

    COMMA  shift, and go to state 126

    $default  reduce using rule 27 (VarDeclAux)

    VarDeclAux  go to state 127


State 78

   21 MethodBody: LBRACE MethodBodyAux RBRACE •

    $default  reduce using rule 21 (MethodBody)


State 79

   23 MethodBodyAux: VarDecl MethodBodyAux •

    $default  reduce using rule 23 (MethodBodyAux)


State 80

   22 MethodBodyAux: Statement MethodBodyAux •

    $default  reduce using rule 22 (MethodBodyAux)


State 81

   35 Statement: MethodInvocation SEMICOLON •

    $default  reduce using rule 35 (Statement)


State 82

   36 Statement: Assignment SEMICOLON •

    $default  reduce using rule 36 (Statement)


State 83

   37 Statement: ParseArgs SEMICOLON •

    $default  reduce using rule 37 (Statement)


State 84

   17 FormalParams: STRING LSQ • RSQ ID

    RSQ  shift, and go to state 128


State 85

   16 FormalParams: tipo ID • FormalParamsAux

    COMMA  shift, and go to state 129

    $default  reduce using rule 20 (FormalParamsAux)

    FormalParamsAux  go to state 130


State 86

   15 MethodHeader: VOID ID LPAR FormalParams RPAR •

    $default  reduce using rule 15 (MethodHeader)


State 87

    9 FieldDeclAux: COMMA ID FieldDeclAux •

    $default  reduce using rule 9 (FieldDeclAux)


State 88

   14 MethodHeader: tipo ID LPAR FormalParams RPAR •

    $default  reduce using rule 14 (MethodHeader)


State 89

   42 StatementAux: Statement • StatementAux

    error      shift, and go to state 32
    SEMICOLON  shift, and go to state 33
    LBRACE     shift, and go to state 34
    WHILE      shift, and go to state 35
    IF         shift, and go to state 36
    RETURN     shift, and go to state 37
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    ID         shift, and go to state 40

    RBRACE  reduce using rule 43 (StatementAux)

    Statement         go to state 89
    StatementAux      go to state 131
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 90

   28 Statement: LBRACE Statement StatementAux • RBRACE

    RBRACE  shift, and go to state 132


State 91

   32 Statement: WHILE LPAR Expr • RPAR Statement

    RPAR  shift, and go to state 133


State 92

   30 Statement: IF LPAR Expr • RPAR Statement
   31          | IF LPAR Expr • RPAR Statement ELSE Statement

    RPAR  shift, and go to state 134


State 93

   82 ExprAux: LPAR error • RPAR

    RPAR  shift, and go to state 135


State 94

   74 ExprAux: LPAR Expr • RPAR

    RPAR  shift, and go to state 136


State 95

   44 MethodInvocation: ID • LPAR RPAR
   45                 | ID • LPAR MethodInvocationAux RPAR
   46                 | ID • LPAR error RPAR
   75 ExprAux: ID •
   76        | ID • DOTLENGTH

    LPAR       shift, and go to state 75
    DOTLENGTH  shift, and go to state 99

    $default  reduce using rule 75 (ExprAux)


State 96

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux
   73        | PLUS ExprAux •

    $default  reduce using rule 73 (ExprAux)


State 97

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux
   71        | MINUS ExprAux •

    $default  reduce using rule 71 (ExprAux)


State 98

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux
   72        | NOT ExprAux •

    $default  reduce using rule 72 (ExprAux)


State 99

   76 ExprAux: ID DOTLENGTH •

    $default  reduce using rule 76 (ExprAux)


State 100

   33 Statement: RETURN Expr SEMICOLON •

    $default  reduce using rule 33 (Statement)


State 101

   55 ExprAux: ExprAux PLUS • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 137


State 102

   56 ExprAux: ExprAux MINUS • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 138


State 103

   57 ExprAux: ExprAux STAR • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 139


State 104

   58 ExprAux: ExprAux DIV • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 140


State 105

   59 ExprAux: ExprAux MOD • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 141


State 106

   61 ExprAux: ExprAux XOR • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 142


State 107

   60 ExprAux: ExprAux OR • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 143


State 108

   62 ExprAux: ExprAux AND • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 144


State 109

   65 ExprAux: ExprAux EQ • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 145


State 110

   66 ExprAux: ExprAux NE • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 146


State 111

   69 ExprAux: ExprAux LE • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 147


State 112

   70 ExprAux: ExprAux GE • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 148


State 113

   67 ExprAux: ExprAux LT • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 149


State 114

   68 ExprAux: ExprAux GT • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 150


State 115

   63 ExprAux: ExprAux LSHIFT • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 151


State 116

   64 ExprAux: ExprAux RSHIFT • ExprAux

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 95
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    ParseArgs         go to state 70
    ExprAux           go to state 152


State 117

   40 Statement: PRINT LPAR STRLIT • RPAR SEMICOLON

    RPAR  shift, and go to state 153


State 118

   39 Statement: PRINT LPAR Expr • RPAR SEMICOLON

    RPAR  shift, and go to state 154


State 119

   52 ParseArgs: PARSEINT LPAR error • RPAR

    RPAR  shift, and go to state 155


State 120

   51 ParseArgs: PARSEINT LPAR ID • LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 156


State 121

   46 MethodInvocation: ID LPAR error • RPAR

    RPAR  shift, and go to state 157


State 122

   44 MethodInvocation: ID LPAR RPAR •

    $default  reduce using rule 44 (MethodInvocation)


State 123

   45 MethodInvocation: ID LPAR MethodInvocationAux • RPAR

    RPAR  shift, and go to state 158


State 124

   47 MethodInvocationAux: Expr • MethodInvocationAux_2

    COMMA  shift, and go to state 159

    $default  reduce using rule 48 (MethodInvocationAux_2)

    MethodInvocationAux_2  go to state 160


State 125

   50 Assignment: ID ASSIGN Expr •

    $default  reduce using rule 50 (Assignment)


State 126

   26 VarDeclAux: COMMA • ID VarDeclAux

    ID  shift, and go to state 161


State 127

   25 VarDecl: tipo ID VarDeclAux • SEMICOLON

    SEMICOLON  shift, and go to state 162


State 128

   17 FormalParams: STRING LSQ RSQ • ID

    ID  shift, and go to state 163


State 129

   19 FormalParamsAux: COMMA • tipo ID FormalParamsAux

    INT     shift, and go to state 19
    DOUBLE  shift, and go to state 20
    BOOL    shift, and go to state 21

    tipo  go to state 164


State 130

   16 FormalParams: tipo ID FormalParamsAux •

    $default  reduce using rule 16 (FormalParams)


State 131

   42 StatementAux: Statement StatementAux •

    $default  reduce using rule 42 (StatementAux)


State 132

   28 Statement: LBRACE Statement StatementAux RBRACE •

    $default  reduce using rule 28 (Statement)


State 133

   32 Statement: WHILE LPAR Expr RPAR • Statement

    error      shift, and go to state 32
    SEMICOLON  shift, and go to state 33
    LBRACE     shift, and go to state 34
    WHILE      shift, and go to state 35
    IF         shift, and go to state 36
    RETURN     shift, and go to state 37
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    ID         shift, and go to state 40

    Statement         go to state 165
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 134

   30 Statement: IF LPAR Expr RPAR • Statement
   31          | IF LPAR Expr RPAR • Statement ELSE Statement

    error      shift, and go to state 32
    SEMICOLON  shift, and go to state 33
    LBRACE     shift, and go to state 34
    WHILE      shift, and go to state 35
    IF         shift, and go to state 36
    RETURN     shift, and go to state 37
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    ID         shift, and go to state 40

    Statement         go to state 166
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 135

   82 ExprAux: LPAR error RPAR •

    $default  reduce using rule 82 (ExprAux)


State 136

   74 ExprAux: LPAR Expr RPAR •

    $default  reduce using rule 74 (ExprAux)


State 137

   55 ExprAux: ExprAux • PLUS ExprAux
   55        | ExprAux PLUS ExprAux •
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux

    STAR  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 55 (ExprAux)


State 138

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   56        | ExprAux MINUS ExprAux •
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux

    STAR  shift, and go to state 103
    DIV   shift, and go to state 104
    MOD   shift, and go to state 105

    $default  reduce using rule 56 (ExprAux)


State 139

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   57        | ExprAux STAR ExprAux •
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux

    $default  reduce using rule 57 (ExprAux)


State 140

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   58        | ExprAux DIV ExprAux •
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux

    $default  reduce using rule 58 (ExprAux)


State 141

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   59        | ExprAux MOD ExprAux •
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux

    $default  reduce using rule 59 (ExprAux)


State 142

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   61        | ExprAux XOR ExprAux •
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux

    PLUS    shift, and go to state 101
    MINUS   shift, and go to state 102
    STAR    shift, and go to state 103
    DIV     shift, and go to state 104
    MOD     shift, and go to state 105
    EQ      shift, and go to state 109
    NE      shift, and go to state 110
    LE      shift, and go to state 111
    GE      shift, and go to state 112
    LT      shift, and go to state 113
    GT      shift, and go to state 114
    LSHIFT  shift, and go to state 115
    RSHIFT  shift, and go to state 116

    $default  reduce using rule 61 (ExprAux)


State 143

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   60        | ExprAux OR ExprAux •
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux

    PLUS    shift, and go to state 101
    MINUS   shift, and go to state 102
    STAR    shift, and go to state 103
    DIV     shift, and go to state 104
    MOD     shift, and go to state 105
    XOR     shift, and go to state 106
    AND     shift, and go to state 108
    EQ      shift, and go to state 109
    NE      shift, and go to state 110
    LE      shift, and go to state 111
    GE      shift, and go to state 112
    LT      shift, and go to state 113
    GT      shift, and go to state 114
    LSHIFT  shift, and go to state 115
    RSHIFT  shift, and go to state 116

    $default  reduce using rule 60 (ExprAux)


State 144

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   62        | ExprAux AND ExprAux •
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux

    PLUS    shift, and go to state 101
    MINUS   shift, and go to state 102
    STAR    shift, and go to state 103
    DIV     shift, and go to state 104
    MOD     shift, and go to state 105
    XOR     shift, and go to state 106
    EQ      shift, and go to state 109
    NE      shift, and go to state 110
    LE      shift, and go to state 111
    GE      shift, and go to state 112
    LT      shift, and go to state 113
    GT      shift, and go to state 114
    LSHIFT  shift, and go to state 115
    RSHIFT  shift, and go to state 116

    $default  reduce using rule 62 (ExprAux)


State 145

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   65        | ExprAux EQ ExprAux •
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    LE     shift, and go to state 111
    GE     shift, and go to state 112
    LT     shift, and go to state 113
    GT     shift, and go to state 114

    $default  reduce using rule 65 (ExprAux)


State 146

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   66        | ExprAux NE ExprAux •
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    LE     shift, and go to state 111
    GE     shift, and go to state 112
    LT     shift, and go to state 113
    GT     shift, and go to state 114

    $default  reduce using rule 66 (ExprAux)


State 147

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   69        | ExprAux LE ExprAux •
   70        | ExprAux • GE ExprAux

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 69 (ExprAux)


State 148

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux
   70        | ExprAux GE ExprAux •

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 70 (ExprAux)


State 149

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   67        | ExprAux LT ExprAux •
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 67 (ExprAux)


State 150

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   68        | ExprAux GT ExprAux •
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105

    $default  reduce using rule 68 (ExprAux)


State 151

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   63        | ExprAux LSHIFT ExprAux •
   64        | ExprAux • RSHIFT ExprAux
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    EQ     shift, and go to state 109
    NE     shift, and go to state 110
    LE     shift, and go to state 111
    GE     shift, and go to state 112
    LT     shift, and go to state 113
    GT     shift, and go to state 114

    $default  reduce using rule 63 (ExprAux)


State 152

   55 ExprAux: ExprAux • PLUS ExprAux
   56        | ExprAux • MINUS ExprAux
   57        | ExprAux • STAR ExprAux
   58        | ExprAux • DIV ExprAux
   59        | ExprAux • MOD ExprAux
   60        | ExprAux • OR ExprAux
   61        | ExprAux • XOR ExprAux
   62        | ExprAux • AND ExprAux
   63        | ExprAux • LSHIFT ExprAux
   64        | ExprAux • RSHIFT ExprAux
   64        | ExprAux RSHIFT ExprAux •
   65        | ExprAux • EQ ExprAux
   66        | ExprAux • NE ExprAux
   67        | ExprAux • LT ExprAux
   68        | ExprAux • GT ExprAux
   69        | ExprAux • LE ExprAux
   70        | ExprAux • GE ExprAux

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    STAR   shift, and go to state 103
    DIV    shift, and go to state 104
    MOD    shift, and go to state 105
    EQ     shift, and go to state 109
    NE     shift, and go to state 110
    LE     shift, and go to state 111
    GE     shift, and go to state 112
    LT     shift, and go to state 113
    GT     shift, and go to state 114

    $default  reduce using rule 64 (ExprAux)


State 153

   40 Statement: PRINT LPAR STRLIT RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 167


State 154

   39 Statement: PRINT LPAR Expr RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 168


State 155

   52 ParseArgs: PARSEINT LPAR error RPAR •

    $default  reduce using rule 52 (ParseArgs)


State 156

   51 ParseArgs: PARSEINT LPAR ID LSQ • Expr RSQ RPAR

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    Assignment        go to state 69
    ParseArgs         go to state 70
    Expr              go to state 169
    ExprAux           go to state 72


State 157

   46 MethodInvocation: ID LPAR error RPAR •

    $default  reduce using rule 46 (MethodInvocation)


State 158

   45 MethodInvocation: ID LPAR MethodInvocationAux RPAR •

    $default  reduce using rule 45 (MethodInvocation)


State 159

   49 MethodInvocationAux_2: COMMA • Expr MethodInvocationAux_2

    LPAR      shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 39
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66
    BOOLLIT   shift, and go to state 67

    MethodInvocation  go to state 68
    Assignment        go to state 69
    ParseArgs         go to state 70
    Expr              go to state 170
    ExprAux           go to state 72


State 160

   47 MethodInvocationAux: Expr MethodInvocationAux_2 •

    $default  reduce using rule 47 (MethodInvocationAux)


State 161

   26 VarDeclAux: COMMA ID • VarDeclAux

    COMMA  shift, and go to state 126

    $default  reduce using rule 27 (VarDeclAux)

    VarDeclAux  go to state 171


State 162

   25 VarDecl: tipo ID VarDeclAux SEMICOLON •

    $default  reduce using rule 25 (VarDecl)


State 163

   17 FormalParams: STRING LSQ RSQ ID •

    $default  reduce using rule 17 (FormalParams)


State 164

   19 FormalParamsAux: COMMA tipo • ID FormalParamsAux

    ID  shift, and go to state 172


State 165

   32 Statement: WHILE LPAR Expr RPAR Statement •

    $default  reduce using rule 32 (Statement)


State 166

   30 Statement: IF LPAR Expr RPAR Statement •
   31          | IF LPAR Expr RPAR Statement • ELSE Statement

    ELSE  shift, and go to state 173

    $default  reduce using rule 30 (Statement)


State 167

   40 Statement: PRINT LPAR STRLIT RPAR SEMICOLON •

    $default  reduce using rule 40 (Statement)


State 168

   39 Statement: PRINT LPAR Expr RPAR SEMICOLON •

    $default  reduce using rule 39 (Statement)


State 169

   51 ParseArgs: PARSEINT LPAR ID LSQ Expr • RSQ RPAR

    RSQ  shift, and go to state 174


State 170

   49 MethodInvocationAux_2: COMMA Expr • MethodInvocationAux_2

    COMMA  shift, and go to state 159

    $default  reduce using rule 48 (MethodInvocationAux_2)

    MethodInvocationAux_2  go to state 175


State 171

   26 VarDeclAux: COMMA ID VarDeclAux •

    $default  reduce using rule 26 (VarDeclAux)


State 172

   19 FormalParamsAux: COMMA tipo ID • FormalParamsAux

    COMMA  shift, and go to state 129

    $default  reduce using rule 20 (FormalParamsAux)

    FormalParamsAux  go to state 176


State 173

   31 Statement: IF LPAR Expr RPAR Statement ELSE • Statement

    error      shift, and go to state 32
    SEMICOLON  shift, and go to state 33
    LBRACE     shift, and go to state 34
    WHILE      shift, and go to state 35
    IF         shift, and go to state 36
    RETURN     shift, and go to state 37
    PRINT      shift, and go to state 38
    PARSEINT   shift, and go to state 39
    ID         shift, and go to state 40

    Statement         go to state 177
    MethodInvocation  go to state 45
    Assignment        go to state 46
    ParseArgs         go to state 47


State 174

   51 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ • RPAR

    RPAR  shift, and go to state 178


State 175

   49 MethodInvocationAux_2: COMMA Expr MethodInvocationAux_2 •

    $default  reduce using rule 49 (MethodInvocationAux_2)


State 176

   19 FormalParamsAux: COMMA tipo ID FormalParamsAux •

    $default  reduce using rule 19 (FormalParamsAux)


State 177

   31 Statement: IF LPAR Expr RPAR Statement ELSE Statement •

    $default  reduce using rule 31 (Statement)


State 178

   51 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR •

    $default  reduce using rule 51 (ParseArgs)
